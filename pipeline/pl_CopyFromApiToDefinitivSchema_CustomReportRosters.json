{
	"name": "pl_CopyFromApiToDefinitivSchema_CustomReportRosters",
	"properties": {
		"activities": [
			{
				"name": "RosterDateIsFinishDate",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "RosterStartDate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "RosterFinishDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(formatDateTime(variables('varRosterStartDate'), 'yyyy-MM-dd'), formatDateTime(variables('varRosterFinishDate'), 'yyyy-MM-dd'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "IncrementRosterDate",
							"description": "",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "CopyToJson_CustomReportRosters",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varRosterDatePlus1",
								"value": {
									"value": "@formatDateTime(addDays(variables('varRosterStartDate'),1), 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "CopyToJson_CustomReportRosters",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"name": "paramOrganizationId",
											"value": {
												"value": "@pipeline().parameters.paramOrganizationId",
												"type": "Expression"
											}
										},
										{
											"name": "CustomReportRosters.PipelineTriggerTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										},
										{
											"name": "CustomReportRosters.PipelineRunId",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										{
											"name": "varRosterDate",
											"value": {
												"value": "@variables('varRosterDate')",
												"type": "Expression"
											}
										},
										{
											"name": "paramRosterId",
											"value": {
												"value": "@pipeline().parameters.paramRosterId",
												"type": "Expression"
											}
										}
									],
									"httpRequestTimeout": "00:10:00",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_rest_definitiv",
									"type": "DatasetReference",
									"parameters": {
										"sourceRelativeUrl": {
											"value": "@concat('/api/custom-reports/BE1BFE92-8295-4F80-A36C-1A63608C1433?organizationId=',pipeline().parameters.paramOrganizationId,'&startDate=', formatDateTime(variables('varRosterDate'), 'yyyy-MM-dd'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
									"type": "DatasetReference",
									"parameters": {
										"ds_PipelineTriggerTime": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"ds_PipelineRunId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"ds_FileSystem": {
											"value": "@pipeline().globalParameters.global_adls2_FileSystem",
											"type": "Expression"
										},
										"ds_Directory": {
											"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
											"type": "Expression"
										},
										"ds_PipelineName": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SetRosterDate",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "IncrementRosterDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varRosterStartDate",
								"value": {
									"value": "@variables('varRosterDatePlus1')",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "RosterStartDate",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "varRosterStartDate",
					"value": {
						"value": "@formatDateTime(pipeline().parameters.paramRosterStartDate, 'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "RosterFinishDate",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "varRosterFinishDate",
					"value": {
						"value": "@if(not(empty(pipeline().parameters.paramRosterFinishDate)), formatDateTime(pipeline().parameters.paramRosterFinishDate, 'yyyy-MM-dd'), formatDateTime(adddays(utcnow(),28), 'yyyy-MM-dd'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Data flow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "RosterDateIsFinishDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_UpdateCusomReportRosters",
						"type": "DataFlowReference",
						"datasetParameters": {
							"SourceBlobDefinitiv": {
								"ds_PipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"ds_PipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"ds_FileSystem": {
									"value": "@pipeline().globalParameters.global_adls2_FileSystem",
									"type": "Expression"
								},
								"ds_Directory": {
									"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
									"type": "Expression"
								},
								"ds_PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"SinkSqlDefintiv": {
								"ds_SchemaName": "definitiv",
								"ds_TableName": "CustomReportRostersD"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "AustraliaEastIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"paramRosterStartDate": {
				"type": "string"
			},
			"paramRosterFinishDate": {
				"type": "string"
			},
			"paramOrganizationId": {
				"type": "string"
			},
			"paramRosterId": {
				"type": "string"
			}
		},
		"variables": {
			"varRosterStartDate": {
				"type": "String"
			},
			"varRosterFinishDate": {
				"type": "String"
			},
			"varRosterCurrentDate": {
				"type": "String"
			},
			"varRosterDatePlus1": {
				"type": "String"
			}
		},
		"folder": {
			"name": "04_Rosters"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-18T05:28:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}