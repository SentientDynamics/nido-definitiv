{
	"name": "pl_CopyFromApiToDefinitivSchema_OrganizationRosters_copy1",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select organizationId from definitiv.Organizations where organizationId='DCA2633E-578E-4358-A5BF-0C38A96BB4CB'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference",
						"parameters": {
							"ds_SchemaName": "definitiv",
							"ds_TableName": "Organization"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachOrganization",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyToJson_RostersV3",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"name": "Org.OrganizationId",
											"value": {
												"value": "@item().organizationId",
												"type": "Expression"
											}
										}
									],
									"httpRequestTimeout": "00:10:00",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['rosterId']"
											},
											"sink": {
												"path": "rosterId"
											}
										},
										{
											"source": {
												"path": "['isTemplate']"
											},
											"sink": {
												"path": "isTemplate"
											}
										},
										{
											"source": {
												"path": "['ceaseDate']"
											},
											"sink": {
												"path": "ceaseDate"
											}
										},
										{
											"source": {
												"path": "['paid']"
											},
											"sink": {
												"path": "paid"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"path": "name"
											}
										},
										{
											"source": {
												"path": "['description']"
											},
											"sink": {
												"path": "description"
											}
										},
										{
											"source": {
												"path": "['defaultPeriodDurationType']"
											},
											"sink": {
												"path": "defaultPeriodDurationType"
											}
										},
										{
											"source": {
												"path": "['customPeriodDuration']"
											},
											"sink": {
												"path": "customPeriodDuration"
											}
										},
										{
											"source": {
												"path": "['commencementDate']"
											},
											"sink": {
												"path": "commencementDate"
											}
										},
										{
											"source": {
												"path": "['notifyEmployeesByDefault']"
											},
											"sink": {
												"path": "notifyEmployeesByDefault"
											}
										},
										{
											"source": {
												"path": "['costingSettings']"
											},
											"sink": {
												"path": "costingSettings"
											}
										},
										{
											"source": {
												"path": "['showAsTwelveHourTime']"
											},
											"sink": {
												"path": "showAsTwelveHourTime"
											}
										},
										{
											"source": {
												"path": "$['Org.OrganizationId']"
											},
											"sink": {
												"path": "$['Org.OrganizationId']"
											}
										}
									],
									"collectionReference": "$['items']"
								}
							},
							"inputs": [
								{
									"referenceName": "ds_rest_definitiv",
									"type": "DatasetReference",
									"parameters": {
										"sourceRelativeUrl": {
											"value": "@concat('/api/organization/', item().organizationId, '/rostering-v3')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
									"type": "DatasetReference",
									"parameters": {
										"ds_PipelineTriggerTime": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"ds_PipelineRunId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"ds_FileSystem": {
											"value": "@pipeline().globalParameters.global_adls2_FileSystem",
											"type": "Expression"
										},
										"ds_Directory": {
											"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
											"type": "Expression"
										},
										"ds_PipelineName": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"folder": {
			"name": "04_Rosters"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-20T04:04:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}