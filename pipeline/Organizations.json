{
	"name": "Organizations",
	"properties": {
		"activities": [
			{
				"name": "Organizations",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ApiToJson",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.03:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Organizations_df",
						"type": "DataFlowReference",
						"datasetParameters": {
							"jsoninput": {
								"ds_PipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"ds_PipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"ds_FileSystem": {
									"value": "@pipeline().globalParameters.global_adls2_FileSystem",
									"type": "Expression"
								},
								"ds_Directory": {
									"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
									"type": "Expression"
								},
								"ds_PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"WriteToSQLDB": {
								"param_SchemaName": "dbo",
								"param_TableName": "Definitiv_Organizations"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "ApiToJson",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "PipelineName",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							{
								"name": "PipelineRunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "PipelineTriggerTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": {
							"value": "@{pipeline().globalParameters.global_REST_RequestTimeoutDuration_30min}",
							"type": "Expression"
						},
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_rest_definitiv",
						"type": "DatasetReference",
						"parameters": {
							"sourceRelativeUrl": "/api/v2/organizations"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Organizations_ds",
						"type": "DatasetReference",
						"parameters": {
							"ds_PipelineTriggerTime": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"ds_PipelineRunId": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"ds_FileSystem": {
								"value": "@pipeline().globalParameters.global_adls2_FileSystem",
								"type": "Expression"
							},
							"ds_Directory": {
								"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
								"type": "Expression"
							},
							"ds_PipelineName": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"param_SchemaName": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"param_TableName": {
				"type": "string",
				"defaultValue": "Definitiv_Organizations"
			}
		},
		"folder": {
			"name": "00_Definitiv Pipelines"
		},
		"annotations": []
	}
}