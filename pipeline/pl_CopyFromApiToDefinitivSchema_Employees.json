{
	"name": "pl_CopyFromApiToDefinitivSchema_Employees",
	"properties": {
		"activities": [
			{
				"name": "ApiToJson",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "PreRowCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.03:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "PipelineRunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "PipelineTriggerTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							{
								"name": "PipelineName",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": {
							"value": "@{pipeline().globalParameters.global_REST_RequestTimeoutDuration_30min}",
							"type": "Expression"
						},
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_rest_definitiv",
						"type": "DatasetReference",
						"parameters": {
							"sourceRelativeUrl": {
								"value": "/api/v2/employees",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
						"type": "DatasetReference",
						"parameters": {
							"ds_PipelineTriggerTime": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"ds_PipelineRunId": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"ds_FileSystem": {
								"value": "@pipeline().globalParameters.global_adls2_FileSystem",
								"type": "Expression"
							},
							"ds_Directory": {
								"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
								"type": "Expression"
							},
							"ds_PipelineName": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "df_Employees",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ApiToJson",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.03:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_Employees",
						"type": "DataFlowReference",
						"parameters": {
							"param_FileSystem": "\"container-adf-nido-prod-eastau-100-1\"",
							"param_ErrorRowDirectory": "\"ErrorRows\""
						},
						"datasetParameters": {
							"sourceJson": {
								"ds_PipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"ds_PipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"ds_FileSystem": {
									"value": "@pipeline().globalParameters.global_adls2_FileSystem",
									"type": "Expression"
								},
								"ds_Directory": {
									"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
									"type": "Expression"
								},
								"ds_PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"sinkSqlEmployee": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName1",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName1",
									"type": "Expression"
								}
							},
							"sinkSqlEmployeePaymentAccounts": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName2",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName2",
									"type": "Expression"
								}
							},
							"sinkSqlEmployeePhoneNumbers": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName3",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName3",
									"type": "Expression"
								}
							},
							"sinkSqlEmployeeStreetAddresses": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName4",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName4",
									"type": "Expression"
								}
							},
							"sinkSqlEmployeeSuperAccounts": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName5",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName5",
									"type": "Expression"
								}
							},
							"sinkSqlEmployeeSuperContributions": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName6",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName6",
									"type": "Expression"
								}
							},
							"sinkSqlEmployeeTaxDeclaration": {
								"param_SchemaName": {
									"value": "@pipeline().parameters.param_SchemeName7",
									"type": "Expression"
								},
								"param_TableName": {
									"value": "@pipeline().parameters.param_TableName7",
									"type": "Expression"
								}
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "AustraliaEastIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "pl_monitoring_logic-nido-prod-eastau-100",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "PostRowCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_monitoring_logic-nido-prod-eastau-100",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"PipelineRunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"DataflowActivityOutput": {
							"value": "@activity('df_Employees').output",
							"type": "Expression"
						},
						"PreRowCount": {
							"value": "@activity('PreRowCount').output.value[0]",
							"type": "Expression"
						},
						"PostRowCount": {
							"value": "@activity('PostRowCount').output.value[0]",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "PreRowCount",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select count(*) as PreRowCount from definitiv.Employees",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference",
						"parameters": {
							"param_SchemaName": {
								"value": "@pipeline().parameters.param_SchemeName1",
								"type": "Expression"
							},
							"param_TableName": {
								"value": "@pipeline().parameters.param_TableName1",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "PostRowCount",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "df_Employees",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select count(*) as PostRowCount from definitiv.Employees",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference",
						"parameters": {
							"param_SchemaName": {
								"value": "@pipeline().parameters.param_SchemeName1",
								"type": "Expression"
							},
							"param_TableName": {
								"value": "@pipeline().parameters.param_TableName1",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"param_SchemeName1": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName1": {
				"type": "string",
				"defaultValue": "Employees"
			},
			"param_SchemeName2": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName2": {
				"type": "string",
				"defaultValue": "EmployeePaymentAccounts"
			},
			"param_SchemeName3": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName3": {
				"type": "string",
				"defaultValue": "EmployeePhoneNumbers"
			},
			"param_SchemeName4": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName4": {
				"type": "string",
				"defaultValue": "EmployeeStreetAddresses"
			},
			"param_SchemeName5": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName5": {
				"type": "string",
				"defaultValue": "EmployeeSuperAccounts"
			},
			"param_SchemeName6": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName6": {
				"type": "string",
				"defaultValue": "EmployeeSuperContributions"
			},
			"param_SchemeName7": {
				"type": "string",
				"defaultValue": "definitiv"
			},
			"param_TableName7": {
				"type": "string",
				"defaultValue": "EmployeeTaxDeclarations"
			}
		},
		"folder": {
			"name": "05_Employees"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-18T05:28:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}