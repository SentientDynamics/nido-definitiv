{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-nido-prod-eastau-100"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"ls_sql_tnk001_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_tnk001'"
		},
		"dataFactory_properties_globalParameters_global_adls2_FileSystem_value": {
			"type": "string",
			"defaultValue": "container-adf-nido-prod-eastau-100-1"
		},
		"dataFactory_properties_globalParameters_global_adls2_InputDirectory_Json_value": {
			"type": "string",
			"defaultValue": "ds_adls2_stnidoprodeastau100_json_input"
		},
		"dataFactory_properties_globalParameters_global_adls2_OutputDirectory_Json_value": {
			"type": "string",
			"defaultValue": "ds_adls2_stnidoprodeastau100_json_output"
		},
		"dataFactory_properties_globalParameters_global_adls2_LogDirectory_value": {
			"type": "string",
			"defaultValue": "ds_adls2_stnidoprodeastau100_log"
		},
		"dataFactory_properties_globalParameters_global_logic_Monitoring_baseUrl_value": {
			"type": "string",
			"defaultValue": "https://prod-06.australiaeast.logic.azure.com/workflows/b4b99c6f86254ebb80fd01886e8f11bd/triggers/manual/paths/invoke/"
		},
		"dataFactory_properties_globalParameters_global_logic_Monitoring_SAS_value": {
			"type": "string",
			"defaultValue": "?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=YTtqyRkDA7A1_pfSdRdJ1PpzB0qgYRvQZmIf1f-N_P4"
		},
		"dataFactory_properties_globalParameters_global_adls2_SqlErrorRowDirectory_value": {
			"type": "string",
			"defaultValue": "ErrorRows"
		},
		"dataFactory_properties_globalParameters_global_CustomReportId_Timesheets_value": {
			"type": "string",
			"defaultValue": "9B394863-2B5E-4704-8AD4-82352C1111C1"
		},
		"dataFactory_properties_globalParameters_global_CustomReportId_Rosters_value": {
			"type": "string",
			"defaultValue": "BE1BFE92-8295-4F80-A36C-1A63608C1433"
		},
		"dataFactory_properties_globalParameters_global_CustomReportId_Payslips_value": {
			"type": "string",
			"defaultValue": "EB7BCD04-6849-4B58-A786-1168A9AF829F"
		},
		"dataFactory_properties_globalParameters_global_CustomReportId_Wages_value": {
			"type": "string",
			"defaultValue": "16F9B79E-D95C-4759-B5BE-A8EE599E777D"
		},
		"dataFactory_properties_globalParameters_global_CustomReportId_GenericOrgId_value": {
			"type": "string",
			"defaultValue": "DCA2633E-578E-4358-A5BF-0C38A96BB4CB"
		},
		"dataFactory_properties_globalParameters_global_REST_RequestTimeoutDuration_30min_value": {
			"type": "string",
			"defaultValue": "00:30:00"
		},
		"dataFactory_properties_globalParameters_global_REST_RequestTimeoutDuration_90min_value": {
			"type": "string",
			"defaultValue": "01:30:00"
		},
		"dataFactory_properties_globalParameters_global_CustomReportId_ReportingLeaveApplications_value": {
			"type": "string",
			"defaultValue": "A1D9B4D7-3A79-413F-B13D-4BA5BC567BDC"
		},
		"dataFactory_properties_globalConfigurations_PipelineBillingEnabled": {
			"type": "string",
			"defaultValue": "true"
		},
		"dataFactory_location": {
			"type": "string",
			"defaultValue": "australiaeast"
		},
		"dataFactory_identity_type": {
			"type": "string",
			"defaultValue": "SystemAssigned"
		},
		"ls_keyvault_kvnidoprodeastau100_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-nido-prod-eastau-100.vault.azure.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stnidoprodeastau100.dfs.core.windows.net/"
		},
		"ls_adls2_stnidoprodeastau100_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stnidoprodeastau100.dfs.core.windows.net/"
		},
		"ls_rest_definitiv_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().sourceBaseUrl}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[parameters('factoryName')]",
			"type": "Microsoft.DataFactory/factories",
			"apiVersion": "2018-06-01",
			"properties": {
				"globalParameters": {
					"global_adls2_FileSystem": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_adls2_FileSystem_value')]"
					},
					"global_adls2_InputDirectory_Json": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_adls2_InputDirectory_Json_value')]"
					},
					"global_adls2_OutputDirectory_Json": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_adls2_OutputDirectory_Json_value')]"
					},
					"global_adls2_LogDirectory": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_adls2_LogDirectory_value')]"
					},
					"global_logic_Monitoring_baseUrl": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_logic_Monitoring_baseUrl_value')]"
					},
					"global_logic_Monitoring_SAS": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_logic_Monitoring_SAS_value')]"
					},
					"global_adls2_SqlErrorRowDirectory": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_adls2_SqlErrorRowDirectory_value')]"
					},
					"global_CustomReportId_Timesheets": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_CustomReportId_Timesheets_value')]"
					},
					"global_CustomReportId_Rosters": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_CustomReportId_Rosters_value')]"
					},
					"global_CustomReportId_Payslips": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_CustomReportId_Payslips_value')]"
					},
					"global_CustomReportId_Wages": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_CustomReportId_Wages_value')]"
					},
					"global_CustomReportId_GenericOrgId": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_CustomReportId_GenericOrgId_value')]"
					},
					"global_REST_RequestTimeoutDuration_30min": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_REST_RequestTimeoutDuration_30min_value')]"
					},
					"global_REST_RequestTimeoutDuration_90min": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_REST_RequestTimeoutDuration_90min_value')]"
					},
					"global_CustomReportId_ReportingLeaveApplications": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_global_CustomReportId_ReportingLeaveApplications_value')]"
					}
				},
				"globalConfigurations": {
					"PipelineBillingEnabled": "[parameters('dataFactory_properties_globalConfigurations_PipelineBillingEnabled')]"
				}
			},
			"dependsOn": [],
			"location": "[parameters('dataFactory_location')]",
			"identity": {
				"type": "[parameters('dataFactory_identity_type')]"
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_keyvault_kvnidoprodeastau100')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_keyvault_kvnidoprodeastau100_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_Monitoring_Scheduled_1d')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-12T01:17:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/id-nido-prod-001')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/7a7b564c-588c-4825-a61b-90fec283b855/resourceGroups/NidoSQLGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id-nido-prod-001"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AustraliaEastIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 240,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": true
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_monitoring_logic-nido-prod-eastau-101')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "logic-nido-prod-eastau-101",
						"description": "Pipeline monitoring and notification",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(\n    pipeline().globalParameters.global_logic_Monitoring_baseUrl,\n    'failed',\n    pipeline().globalParameters.global_logic_Monitoring_SAS\n    )",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AustraliaEastIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"PipelineName": "@{pipeline().parameters.PipelineName}",
								"PipelineRunId": "@{pipeline().parameters.PipelineRunId}",
								"PipelineTriggerId": "@{pipeline().parameters.PipelineTriggerId}",
								"PipelineTriggerName": "@{pipeline().parameters.PipelineTriggerName}",
								"PipelineTriggerTime": "@{pipeline().parameters.PipelineTriggerTime}",
								"PipelineTriggerType": "@{pipeline().parameters.PipelineTriggerType}",
								"PipelineTriggeredByPipelineName": "@{pipeline().parameters.PipelineTriggeredByPipelineName}",
								"PipelineTriggeredByPipelineRunId": "@{pipeline().parameters.PipelineTriggeredByPipelineRunId}",
								"ActivityOutputMessage": "@{pipeline().parameters.ActivityOutputMessage}",
								"AzureSqlTargetTable": "@{pipeline().parameters.AzureSqlTargetTable}"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PipelineName": {
						"type": "string"
					},
					"PipelineRunId": {
						"type": "string"
					},
					"PipelineTriggerId": {
						"type": "string"
					},
					"PipelineTriggerName": {
						"type": "string"
					},
					"PipelineTriggerTime": {
						"type": "string"
					},
					"PipelineTriggerType": {
						"type": "string"
					},
					"PipelineTriggeredByPipelineName": {
						"type": "string"
					},
					"PipelineTriggeredByPipelineRunId": {
						"type": "string"
					},
					"ActivityOutputMessage": {
						"type": "string"
					},
					"AzureSqlTargetTable": {
						"type": "string"
					}
				},
				"variables": {
					"varLogicAppBody": {
						"type": "String"
					}
				},
				"folder": {
					"name": "00_Monitoring"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AustraliaEastIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_monitoring_logic-nido-prod-eastau-102')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "logic-nido-prod-eastau-102",
						"description": "Pipeline monitoring and notification",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(\n    pipeline().globalParameters.global_logic_Monitoring_baseUrl,\n    'succeeded',\n    pipeline().globalParameters.global_logic_Monitoring_SAS\n    )",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AustraliaEastIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"PipelineName": "@{pipeline().parameters.PipelineName}",
								"PipelineRunId": "@{pipeline().parameters.PipelineRunId}",
								"PipelineTriggerId": "@{pipeline().parameters.PipelineTriggerId}",
								"PipelineTriggerName": "@{pipeline().parameters.PipelineTriggerName}",
								"PipelineTriggerTime": "@{pipeline().parameters.PipelineTriggerTime}",
								"PipelineTriggerType": "@{pipeline().parameters.PipelineTriggerType}",
								"PipelineTriggeredByPipelineName": "@{pipeline().parameters.PipelineTriggeredByPipelineName}",
								"PipelineTriggeredByPipelineRunId": "@{pipeline().parameters.PipelineTriggeredByPipelineRunId}",
								"AzureSqlTargetTablePreRowCount": "@{pipeline().parameters.AzureSqlTargetTablePreRowCount}",
								"AzureSqlTargetTablePostRowCount": "@{pipeline().parameters.AzureSqlTargetTablePostRowCount}",
								"AzureSqlTargetTable": "@{pipeline().parameters.AzureSqlTargetTable}"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PipelineName": {
						"type": "string",
						"defaultValue": "PipelineName"
					},
					"PipelineRunId": {
						"type": "object",
						"defaultValue": "PipelineRunId"
					},
					"PipelineTriggerId": {
						"type": "string",
						"defaultValue": "PipelineTriggerId"
					},
					"PipelineTriggerName": {
						"type": "string",
						"defaultValue": "PipelineTriggerName"
					},
					"PipelineTriggerTime": {
						"type": "string",
						"defaultValue": "PipelineTriggerTime"
					},
					"PipelineTriggerType": {
						"type": "string",
						"defaultValue": "PipelineTriggerType"
					},
					"PipelineTriggeredByPipelineName": {
						"type": "string",
						"defaultValue": "PipelineTriggeredByPipelineName"
					},
					"PipelineTriggeredByPipelineRunId": {
						"type": "string",
						"defaultValue": "PipelineTriggeredByPipelineRunId"
					},
					"AzureSqlTargetTable": {
						"type": "string",
						"defaultValue": "AzureSqlTargetTable"
					},
					"AzureSqlTargetTablePreRowCount": {
						"type": "string",
						"defaultValue": "AzureSqlTargetTablePreRowCount"
					},
					"AzureSqlTargetTablePostRowCount": {
						"type": "string",
						"defaultValue": "AzureSqlTargetTablePostRowCount"
					}
				},
				"folder": {
					"name": "00_Monitoring"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AustraliaEastIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls2_stnidoprodeastau100')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls2_stnidoprodeastau100_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest_definitiv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sourceBaseUrl": {
						"type": "String",
						"defaultValue": "https://nido.definitiv.com.au"
					}
				},
				"annotations": [
					"Basic Authentication i.e. Base 64 encoded; Credentials Format {API Key}:{Password (Leave empty)} e.g. \"Basic {base64 string}\""
				],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_definitiv_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Authorization": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_tnk001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_tnk001_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TimesheetJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2_stnidoprodeastau100",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_PipelineTriggerTime": {
						"type": "string",
						"defaultValue": "2022-01-25T00:18:17.611502Z"
					},
					"ds_PipelineRunId": {
						"type": "string",
						"defaultValue": "187d99be-a307-4534-9acc-0a17fc03d0ab"
					},
					"ds_FileSystem": {
						"type": "string",
						"defaultValue": "container-adf-nido-prod-eastau-100-1"
					},
					"ds_Directory": {
						"type": "string",
						"defaultValue": "ds_adls2_stnidoprodeastau100_json_output"
					},
					"ds_PipelineName": {
						"type": "string",
						"defaultValue": "pl_B1_Payslips_ApiToDefinitiv"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    dataset().ds_Directory,\n    '/',\n    dataset().ds_PipelineName,\n    '/',\n    formatDateTime(string(dataset().ds_PipelineTriggerTime), 'yyyy-MM-ddTHH-mm-ss'),\n    '_',\n    dataset().ds_PipelineRunId\n)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"timesheetId": {
							"type": "string"
						},
						"employeeId": {
							"type": "string"
						},
						"employeeName": {
							"type": "string"
						},
						"projectId": {
							"type": "string"
						},
						"positionId": {
							"type": "null"
						},
						"positionName": {
							"type": "null"
						},
						"projectApprovalWorkflow": {
							"type": "array"
						},
						"projectName": {
							"type": "string"
						},
						"projectWorkOrderId": {
							"type": "null"
						},
						"workOrderName": {
							"type": "null"
						},
						"roleId": {
							"type": "string"
						},
						"roleName": {
							"type": "string"
						},
						"departmentId": {
							"type": "string"
						},
						"departmentName": {
							"type": "string"
						},
						"locationId": {
							"type": "string"
						},
						"locationName": {
							"type": "string"
						},
						"shiftTypeId": {
							"type": "null"
						},
						"shiftTypeName": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"useTime": {
							"type": "boolean"
						},
						"durationHours": {
							"type": "null"
						},
						"employeeSpecifiedDurationHours": {
							"type": "null"
						},
						"startTimeOfDay": {
							"type": "string"
						},
						"employeeSpecifiedStartTimeOfDay": {
							"type": "null"
						},
						"endTimeOfDay": {
							"type": "string"
						},
						"employeeSpecifiedEndTimeOfDay": {
							"type": "null"
						},
						"timePeriodAlerts": {
							"type": "array"
						},
						"breaks": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string"
									},
									"startTimeOfDay": {
										"type": "string"
									},
									"employeeSpecifiedStartTimeOfDay": {
										"type": "null"
									},
									"endTimeOfDay": {
										"type": "string"
									},
									"employeeSpecifiedEndTimeOfDay": {
										"type": "null"
									},
									"durationHours": {
										"type": "null"
									},
									"employeeSpecifiedDurationHours": {
										"type": "null"
									}
								}
							}
						},
						"tasks": {
							"type": "array"
						},
						"workOrderTasks": {
							"type": "array"
						},
						"assets": {
							"type": "array"
						},
						"notes": {
							"type": "null"
						},
						"timePeriodMode": {
							"type": "string"
						},
						"status": {
							"type": "string"
						},
						"approvals": {
							"type": "array"
						},
						"publicHolidayWorked": {
							"type": "null"
						},
						"timeClockEvents": {
							"type": "array"
						},
						"customFields": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"customFieldId": {
										"type": "string"
									},
									"targetEntity": {
										"type": "integer"
									},
									"dataType": {
										"type": "string"
									},
									"value": {
										"type": "null"
									},
									"name": {
										"type": "string"
									},
									"displayName": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"enabled": {
										"type": "boolean"
									},
									"global": {
										"type": "boolean"
									},
									"options": {
										"type": "array"
									},
									"isMandatory": {
										"type": "boolean"
									},
									"order": {
										"type": "integer"
									},
									"dateDriven": {
										"type": "boolean"
									},
									"timeBased": {
										"type": "boolean"
									},
									"displayOnTimesheetSummary": {
										"type": "boolean"
									},
									"preventMultipleEntries": {
										"type": "boolean"
									},
									"timePeriodMode": {
										"type": "null"
									},
									"inheritTimesheetPeriod": {
										"type": "null"
									},
									"customFieldDisplayStatus": {
										"type": "null"
									}
								}
							}
						},
						"totalBreakHours": {
							"type": "number"
						},
						"totalWorkedHours": {
							"type": "number"
						},
						"allowEditing": {
							"type": "boolean"
						},
						"submittedDateTime": {
							"type": "string"
						},
						"lastUpdated": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_stnidoprodeastau100')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Timesheet_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_tnk001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_SchemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"param_TableName": {
						"type": "string",
						"defaultValue": "TimesheetReport"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().param_SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().param_TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_tnk001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_stnidoprodeastau100_json_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2_stnidoprodeastau100",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_PipelineTriggerTime": {
						"type": "string",
						"defaultValue": "2022-01-25T00:18:17.611502Z"
					},
					"ds_PipelineRunId": {
						"type": "string",
						"defaultValue": "187d99be-a307-4534-9acc-0a17fc03d0ab"
					},
					"ds_FileSystem": {
						"type": "string",
						"defaultValue": "container-adf-nido-prod-eastau-100-1"
					},
					"ds_Directory": {
						"type": "string",
						"defaultValue": "ds_adls2_stnidoprodeastau100_json_output"
					},
					"ds_PipelineName": {
						"type": "string",
						"defaultValue": "pl_B1_Payslips_ApiToDefinitiv"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    dataset().ds_Directory,\n    '/',\n    dataset().ds_PipelineName,\n    '/',\n    formatDateTime(string(dataset().ds_PipelineTriggerTime), 'yyyy-MM-ddTHH-mm-ss'),\n    '_',\n    dataset().ds_PipelineRunId\n)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_stnidoprodeastau100')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_definitiv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_rest_definitiv",
					"type": "LinkedServiceReference",
					"parameters": {
						"sourceBaseUrl": "https://nido.definitiv.com.au"
					}
				},
				"parameters": {
					"sourceRelativeUrl": {
						"type": "String",
						"defaultValue": "/api/v2/organizations"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().sourceRelativeUrl",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_rest_definitiv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_tnk001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_tnk001",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_SchemaName": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"param_TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().param_SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().param_TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_tnk001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TimesheetDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TimesheetJson",
								"type": "DatasetReference"
							},
							"name": "TimesheetReport"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Timesheet_sql",
								"type": "DatasetReference"
							},
							"name": "WritetoSQLDB"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          timesheetId as string,",
						"          employeeId as string,",
						"          employeeName as string,",
						"          projectId as string,",
						"          positionId as string,",
						"          positionName as string,",
						"          projectApprovalWorkflow as string[],",
						"          projectName as string,",
						"          projectWorkOrderId as string,",
						"          workOrderName as string,",
						"          roleId as string,",
						"          roleName as string,",
						"          departmentId as string,",
						"          departmentName as string,",
						"          locationId as string,",
						"          locationName as string,",
						"          shiftTypeId as string,",
						"          shiftTypeName as string,",
						"          date as string,",
						"          useTime as boolean,",
						"          durationHours as string,",
						"          employeeSpecifiedDurationHours as string,",
						"          startTimeOfDay as string,",
						"          employeeSpecifiedStartTimeOfDay as string,",
						"          endTimeOfDay as string,",
						"          employeeSpecifiedEndTimeOfDay as string,",
						"          timePeriodAlerts as string[],",
						"          breaks as (description as string, startTimeOfDay as string, employeeSpecifiedStartTimeOfDay as string, endTimeOfDay as string, employeeSpecifiedEndTimeOfDay as string, durationHours as string, employeeSpecifiedDurationHours as string)[],",
						"          tasks as string[],",
						"          workOrderTasks as string[],",
						"          assets as string[],",
						"          notes as string,",
						"          timePeriodMode as string,",
						"          status as string,",
						"          approvals as string[],",
						"          publicHolidayWorked as string,",
						"          timeClockEvents as string[],",
						"          customFields as (customFieldId as string, targetEntity as integer, dataType as string, value as string, name as string, displayName as string, description as string, enabled as boolean, global as boolean, options as string[], isMandatory as boolean, order as integer, dateDriven as boolean, timeBased as boolean, displayOnTimesheetSummary as boolean, preventMultipleEntries as boolean, timePeriodMode as string, inheritTimesheetPeriod as string, customFieldDisplayStatus as string)[],",
						"          totalBreakHours as double,",
						"          totalWorkedHours as double,",
						"          allowEditing as boolean,",
						"          submittedDateTime as string,",
						"          lastUpdated as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> TimesheetReport",
						"TimesheetReport sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          timesheetId,",
						"          employeeId,",
						"          employeeName,",
						"          projectId,",
						"          positionId,",
						"          positionName,",
						"          projectName,",
						"          projectWorkOrderId,",
						"          workOrderName,",
						"          roleId,",
						"          roleName,",
						"          departmentId,",
						"          departmentName,",
						"          locationId,",
						"          locationName,",
						"          shiftTypeId,",
						"          shiftTypeName,",
						"          date,",
						"          useTime,",
						"          durationHours,",
						"          employeeSpecifiedDurationHours,",
						"          startTimeOfDay,",
						"          employeeSpecifiedStartTimeOfDay,",
						"          endTimeOfDay,",
						"          employeeSpecifiedEndTimeOfDay,",
						"          notes,",
						"          timePeriodMode,",
						"          status,",
						"          publicHolidayWorked,",
						"          totalBreakHours,",
						"          totalWorkedHours,",
						"          allowEditing,",
						"          submittedDateTime,",
						"          lastUpdated",
						"     )) ~> WritetoSQLDB"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TimesheetJson')]",
				"[concat(variables('factoryId'), '/datasets/Timesheet_sql')]"
			]
		}
	]
}