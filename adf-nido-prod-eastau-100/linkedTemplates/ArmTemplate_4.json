{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-nido-prod-eastau-100"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_CreateCsv_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ReportingLeaveApplications",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"DirectoryName": "a",
										"FileName": "b"
									},
									"sink1": {
										"schemaName": "ReportingLeaveApplications_csv",
										"tableName": "DefaultFile",
										"pipelineRunId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"pipelineTriggerTime": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "08_Organizations"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-02T04:30:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_01_Payslips_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_B1_Payslips_ApiToDefinitiv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_B1_OrgPayRuns_ApiToDefinitiv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B1_Payslips_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_B2_Payslips_DefinitivToDraft1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_B1_Payslips_ApiToDefinitiv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B2_Payslips_DefinitivToDraft1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_C1_Payslips_DraftReportViews",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_B2_Payslips_DefinitivToDraft1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_C1_Payslips_DraftReportViews",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_B1_OrgPayRuns_ApiToDefinitiv",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B1_OrgPayRuns_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "01_Payslips"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T01:50:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_CopyFromApiToDefinitivSchema_OrganizationRosters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select organizationId from definitiv.Organizations where organizationId='DCA2633E-578E-4358-A5BF-0C38A96BB4CB'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"ds_SchemaName": "definitiv",
									"ds_TableName": "Organization"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOrganization",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyToJson_RostersV3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Org.OrganizationId",
													"value": {
														"value": "@item().organizationId",
														"type": "Expression"
													}
												},
												{
													"name": "OrgRosters.PipelineTriggerTime",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												{
													"name": "OrgRosters.PipelineName",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												{
													"name": "OrgRosters.PipelineRunId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:10:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['rosterId']"
													},
													"sink": {
														"path": "rosterId"
													}
												},
												{
													"source": {
														"path": "[['isTemplate']"
													},
													"sink": {
														"path": "isTemplate"
													}
												},
												{
													"source": {
														"path": "[['ceaseDate']"
													},
													"sink": {
														"path": "ceaseDate"
													}
												},
												{
													"source": {
														"path": "[['paid']"
													},
													"sink": {
														"path": "paid"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"path": "name"
													}
												},
												{
													"source": {
														"path": "[['description']"
													},
													"sink": {
														"path": "description"
													}
												},
												{
													"source": {
														"path": "[['defaultPeriodDurationType']"
													},
													"sink": {
														"path": "defaultPeriodDurationType"
													}
												},
												{
													"source": {
														"path": "[['customPeriodDuration']"
													},
													"sink": {
														"path": "customPeriodDuration"
													}
												},
												{
													"source": {
														"path": "[['commencementDate']"
													},
													"sink": {
														"path": "commencementDate"
													}
												},
												{
													"source": {
														"path": "[['notifyEmployeesByDefault']"
													},
													"sink": {
														"path": "notifyEmployeesByDefault"
													}
												},
												{
													"source": {
														"path": "[['costingSettings']"
													},
													"sink": {
														"path": "costingSettings"
													}
												},
												{
													"source": {
														"path": "[['showAsTwelveHourTime']"
													},
													"sink": {
														"path": "showAsTwelveHourTime"
													}
												},
												{
													"source": {
														"path": "$['Org.OrganizationId']"
													},
													"sink": {
														"path": "$['Org.OrganizationId']"
													}
												},
												{
													"source": {
														"path": "$['OrgRosters.PipelineTriggerTime']"
													},
													"sink": {
														"path": "$['OrgRosters.PipelineTriggerTime']"
													}
												},
												{
													"source": {
														"path": "$['OrgRosters.PipelineName']"
													},
													"sink": {
														"path": "$['OrgRosters.PipelineName']"
													}
												},
												{
													"source": {
														"path": "$['OrgRosters.PipelineRunId']"
													},
													"sink": {
														"path": "$['OrgRosters.PipelineRunId']"
													}
												}
											],
											"collectionReference": "$['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "ds_rest_definitiv",
											"type": "DatasetReference",
											"parameters": {
												"sourceRelativeUrl": {
													"value": "@concat('/api/organization/', item().organizationId, '/rostering-v3')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
											"type": "DatasetReference",
											"parameters": {
												"ds_PipelineTriggerTime": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"ds_PipelineRunId": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"ds_FileSystem": {
													"value": "@pipeline().globalParameters.global_adls2_FileSystem",
													"type": "Expression"
												},
												"ds_Directory": {
													"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
													"type": "Expression"
												},
												"ds_PipelineName": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEachRoster",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "pl_CustomReportRosters",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_CopyFromApiToDefinitivSchema_CustomReportRosters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"paramRosterStartDate": {
												"value": "@item().commencementDate",
												"type": "Expression"
											},
											"paramRosterFinishDate": {
												"value": "@item().ceaseDate",
												"type": "Expression"
											},
											"paramOrganizationId": {
												"value": "@item().organizationId",
												"type": "Expression"
											},
											"paramRosterId": {
												"value": "@item().rosterId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "df_FlattenOrgRosters_UpdateOrgRosters1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select rosterId, organizationId, commencementDate, ceaseDate, defaultPeriodDurationType \nfrom definitiv.OrganizationRosters \nwhere commencementDate > '2021-12-31'\norder by commencementDate, ceaseDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"ds_SchemaName": "definitiv",
									"ds_TableName": "OrganizationRosters"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "df_FlattenOrgRosters_UpdateOrgRosters1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEachOrganization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_FlattenOrgRosters_UpdateOrgRosters1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceBlobDefinitiv": {
										"ds_PipelineTriggerTime": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"ds_PipelineRunId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"ds_FileSystem": {
											"value": "@pipeline().globalParameters.global_adls2_FileSystem",
											"type": "Expression"
										},
										"ds_Directory": {
											"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
											"type": "Expression"
										},
										"ds_PipelineName": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"SourceSqlDefinitiv": {
										"ds_SchemaName": "definitiv",
										"ds_TableName": "OrganizationRosters"
									},
									"SinkSqlDefinitiv": {
										"ds_SchemaName": "definitiv",
										"ds_TableName": "OrganizationRosters"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AustraliaEastIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "04_Rosters"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T04:04:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_CopyFromApiToDefinitivSchema_OrganizationRosters_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachRoster",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "pl_CustomReportRosters",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_CopyFromApiToDefinitivSchema_CustomReportRosters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"paramRosterStartDate": {
												"value": "@item().commencementDate",
												"type": "Expression"
											},
											"paramRosterFinishDate": {
												"value": "@item().ceaseDate",
												"type": "Expression"
											},
											"paramOrganizationId": {
												"value": "@item().organizationId",
												"type": "Expression"
											},
											"paramRosterId": {
												"value": "@item().rosterId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select rosterId, organizationId, commencementDate, ceaseDate, defaultPeriodDurationType \nfrom definitiv.OrganizationRosters \nwhere commencementDate > '2022-02-28'\norder by commencementDate, ceaseDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"ds_SchemaName": "definitiv",
									"ds_TableName": "OrganizationRosters"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "04_Rosters"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T04:04:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OrganizationPayRuns",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportRosters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_OrganizationRosters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportWages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_CustomReportWages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportPayslips",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B1_Payslips_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportTimesheets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_A1_Timesheets_DboToArchive",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ReportingLeaveApplications",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_ReportingLeaveApplications",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ReportingLeaveBalances",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_ReportingLeaveBalances",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Employees",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_Employees",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "08_Organizations"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T01:50:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_CopyFromApiToDefinitivSchema_OrganizationRosters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_01_Payslips')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_01_Payslips_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 4,
						"startTime": "2022-01-17T23:51:00",
						"timeZone": "AUS Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_01_Payslips_Master')]"
			]
		}
	]
}