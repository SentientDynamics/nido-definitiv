{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-nido-prod-eastau-100"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_01_Payslips_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_B1_Payslips_ApiToDefinitiv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_B1_OrgPayRuns_ApiToDefinitiv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B1_Payslips_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_B2_Payslips_DefinitivToDraft1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_B1_Payslips_ApiToDefinitiv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B2_Payslips_DefinitivToDraft1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_C1_Payslips_DraftReportViews",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_B2_Payslips_DefinitivToDraft1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_C1_Payslips_DraftReportViews",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_B1_OrgPayRuns_ApiToDefinitiv",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B1_OrgPayRuns_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"MasterPipelineTriggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"MasterPipelineRunId": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "01_Payslips"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T01:50:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_B1_Timesheets_ApiToDefinitiv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachOrganization",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "pl_B2_Timesheets_ApiToDefinitiv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_B2_Timesheets_ApiToDefinitiv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"paramTimesheetStartDate": {
												"value": "2022-01-03",
												"type": "Expression"
											},
											"paramTimesheetFinishDate": {
												"value": "2022-01-07",
												"type": "Expression"
											},
											"paramOrganizationId": {
												"value": "@item().organizationId",
												"type": "Expression"
											},
											"sourceApiSchema": {
												"value": "@pipeline().parameters.sourceApiSchema",
												"type": "Expression"
											},
											"sourceApiTable": {
												"value": "@pipeline().parameters.sourceApiTable",
												"type": "Expression"
											},
											"sourceSqlSchema": {
												"value": "@pipeline().parameters.sourceSqlSchema",
												"type": "Expression"
											},
											"sourceSqlTable": {
												"value": "@pipeline().parameters.sourceSqlTable",
												"type": "Expression"
											},
											"sinkSqlSchema": {
												"value": "@pipeline().parameters.sinkSqlSchema",
												"type": "Expression"
											},
											"sinkSqlTable": {
												"value": "@pipeline().parameters.sinkSqlTable",
												"type": "Expression"
											},
											"sourceJsonSchema": {
												"value": "@pipeline().parameters.sourceJsonSchema",
												"type": "Expression"
											},
											"sourceJsonTable": {
												"value": "@pipeline().parameters.sourceJsonTable",
												"type": "Expression"
											},
											"sinkJsonSchema": {
												"value": "@pipeline().parameters.sinkJsonSchema",
												"type": "Expression"
											},
											"sinkJsonTable": {
												"value": "@pipeline().parameters.sinkJsonTable",
												"type": "Expression"
											},
											"MasterPipelineTriggerTime": {
												"value": "@pipeline().parameters.MasterPipelineTriggerTime",
												"type": "Expression"
											},
											"MasterPipelineRunId": {
												"value": "@pipeline().parameters.MasterPipelineRunId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetPipelineTriggerTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetPipelineRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select organizationId from definitiv.Organizations where organizationCode = 'cms-pty-ltd'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"ds_SchemaName": {
										"value": "definitiv",
										"type": "Expression"
									},
									"ds_TableName": "Organizations"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "SetPipelineTriggerTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineTriggerTime",
							"value": {
								"value": "@convertFromUtc(\n    coalesce(\n        pipeline().parameters.MasterPipelineTriggerTime,\n        pipeline().TriggerTime\n    ),\n    'AUS Eastern Standard Time'\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetPipelineRunId",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineRunId",
							"value": {
								"value": "@coalesce(pipeline().parameters.MasterPipelineRunId,pipeline().RunId)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourceApiSchema": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"sourceApiTable": {
						"type": "string",
						"defaultValue": "CustomReportTimesheets"
					},
					"sourceSqlSchema": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"sourceSqlTable": {
						"type": "string",
						"defaultValue": "CustomReportTimesheetsD"
					},
					"sinkSqlSchema": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"sinkSqlTable": {
						"type": "string",
						"defaultValue": "CustomReportTimesheetsD"
					},
					"sourceJsonSchema": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"sourceJsonTable": {
						"type": "string",
						"defaultValue": "CustomReportTimesheets"
					},
					"sinkJsonSchema": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"sinkJsonTable": {
						"type": "string",
						"defaultValue": "CustomReportTimesheets"
					},
					"MasterPipelineTriggerTime": {
						"type": "string"
					},
					"MasterPipelineRunId": {
						"type": "string"
					}
				},
				"variables": {
					"PipelineTriggerTime": {
						"type": "String"
					},
					"PipelineRunId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "03_Timesheets"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-19T01:05:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_CopyFromApiToDefinitivSchema_OrganizationRosters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetPipelineTriggerTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetPipelineRunId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select organizationId from definitiv.Organizations",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"ds_SchemaName": "definitiv",
									"ds_TableName": "Organization"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOrganization",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyToJson_RostersV3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "organizationId",
													"value": {
														"value": "@item().organizationId",
														"type": "Expression"
													}
												},
												{
													"name": "pipelineRunId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												{
													"name": "pipelineTriggerTime",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:10:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_rest_definitiv",
											"type": "DatasetReference",
											"parameters": {
												"sourceRelativeUrl": {
													"value": "@concat('/api/organization/', item().organizationId, '/rostering-v3')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls2_stnidoprodeastau100_json_input",
											"type": "DatasetReference",
											"parameters": {
												"ds_PipelineTriggerTime": {
													"value": "@variables('PipelineTriggerTime')",
													"type": "Expression"
												},
												"ds_PipelineRunId": {
													"value": "@variables('PipelineRunId')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "ForEachRoster",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup2').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "pl_CustomReportRosters",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_CopyFromApiToDefinitivSchema_CustomReportRosters",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"paramRosterStartDate": {
												"value": "@item().commencementDate",
												"type": "Expression"
											},
											"paramRosterFinishDate": {
												"value": "@item().ceaseDate",
												"type": "Expression"
											},
											"paramOrganizationId": {
												"value": "@item().organizationId",
												"type": "Expression"
											},
											"paramRosterId": {
												"value": "@item().rosterId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "df_FlattenOrgRosters_UpdateOrgRosters",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEachOrganization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_FlattenOrgRosters_UpdateOrgRosters",
								"type": "DataFlowReference",
								"parameters": {
									"PipelineTriggerTime": {
										"value": "'@{variables('PipelineTriggerTime')}'",
										"type": "Expression"
									},
									"PipelineRunId": {
										"value": "'@{variables('PipelineRunId')}'",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "'@{pipeline().Pipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"sourceApi": {},
									"sourceSql": {
										"ds_SchemaName": "definitiv",
										"ds_TableName": "OrganizationRosters"
									},
									"sinkSql": {
										"ds_SchemaName": "definitiv",
										"ds_TableName": "OrganizationRosters"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AustraliaEastIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true,
							"continueOnError": true
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "df_FlattenOrgRosters_UpdateOrgRosters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select rosterId, organizationId, commencementDate, ceaseDate, defaultPeriodDurationType from definitiv.OrganizationRosters order by commencementDate, ceaseDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"ds_SchemaName": "definitiv",
									"ds_TableName": "OrganizationRosters"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "SetPipelineTriggerTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineTriggerTime",
							"value": {
								"value": "@coalesce(pipeline().parameters.MasterPipelineTriggerTime,pipeline().TriggerTime)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetPipelineRunId",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineRunId",
							"value": {
								"value": "@coalesce(pipeline().parameters.MasterPipelineRunId,pipeline().RunId)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"MasterPipelineTriggerTime": {
						"type": "string"
					},
					"MasterPipelineRunId": {
						"type": "string"
					}
				},
				"variables": {
					"PipelineTriggerTime": {
						"type": "String"
					},
					"PipelineRunId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "04_Rosters"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T04:04:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OrganizationPayRuns",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportRosters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_OrganizationRosters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportWages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_CustomReportWages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportPayslips",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B1_Payslips_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CustomReportTimesheets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "OrganizationPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_B2_Timesheets_ApiToDefinitiv",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ReportingLeaveApplications",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_ReportingLeaveApplications",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ReportingLeaveBalances",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_ReportingLeaveBalances",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Employees",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_Employees",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "08_Organizations"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-20T01:50:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_CopyFromApiToDefinitivSchema_OrganizationRosters')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_01_Payslips')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_01_Payslips_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 4,
						"startTime": "2022-01-17T23:51:00",
						"timeZone": "AUS Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_01_Payslips_Master')]"
			]
		}
	]
}