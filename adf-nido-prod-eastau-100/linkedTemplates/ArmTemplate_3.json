{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-nido-prod-eastau-100"
		},
		"tr_Employees_Scheduled_1d_properties_PayPolicies_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_Employees_Scheduled_1d_properties_PayPolicies_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Employee_Pay_Policies"
		},
		"tr_Employees_Scheduled_1d_properties_Employees_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_Employees_Scheduled_1d_properties_Employees_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Employee_Table_Master"
		},
		"tr_LeaveApplications_Scheduled_1d_properties_LeaveApplications_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_LeaveApplications_Scheduled_1d_properties_LeaveApplications_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Definitiv_LeaveApplications"
		},
		"tr_LeaveBalances_Scheduled_1d_properties_LeaveBalances_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_LeaveBalances_Scheduled_1d_properties_LeaveBalances_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Definitiv_LeaveBalances"
		},
		"tr_Organizations_Scheduled_1w_properties_Organizations_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_Organizations_Scheduled_1w_properties_Organizations_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Definitiv_Organizations"
		},
		"tr_Rosters_Scheduled_1h_properties_pl_CopyFromApiToDefinitivSchema_Rosters_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "definitiv"
		},
		"tr_Rosters_Scheduled_1h_properties_pl_CopyFromApiToDefinitivSchema_Rosters_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "CustomReportRosters"
		},
		"tr_Timesheets_Scheduled_1d_properties_Timesheets_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_Timesheets_Scheduled_1d_properties_Timesheets_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Definitiv_Timesheets"
		},
		"tr_PayRuns_Scheduled_1w_properties_pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "definitiv"
		},
		"tr_PayRuns_Scheduled_1w_properties_pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "OrganizationPayRuns"
		},
		"tr_PayRuns_Scheduled_1w_properties_Payslips_parameters_param_SchemaName": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"tr_PayRuns_Scheduled_1w_properties_Payslips_parameters_param_TableName": {
			"type": "string",
			"defaultValue": "Definitiv_Payslips _Staging"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_CopyFromApiToDefinitivSchema_Wages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_Wages",
						"description": "",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "OrgPayRun",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.03:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Wages",
								"type": "DataFlowReference",
								"parameters": {
									"param_FileSystem": "\"container-adf-nido-prod-eastau-100-1\"",
									"param_ErrorRowDirectory": "\"ErrorRows\"",
									"param_DataflowName": "\"df_Wages\""
								},
								"datasetParameters": {
									"sourceJson": {
										"ds_PipelineTriggerTime": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"ds_PipelineRunId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"ds_FileSystem": {
											"value": "@pipeline().globalParameters.global_adls2_FileSystem",
											"type": "Expression"
										},
										"ds_Directory": {
											"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
											"type": "Expression"
										},
										"ds_PipelineName": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"sinkSql": {
										"param_SchemaName": {
											"value": "@pipeline().parameters.param_SchemaName",
											"type": "Expression"
										},
										"param_TableName": {
											"value": "@pipeline().parameters.param_TableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AustraliaEastIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PreRowCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as PreRowCount from definitiv.CustomReportWages",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"param_SchemaName": {
										"value": "@pipeline().parameters.param_SchemaName",
										"type": "Expression"
									},
									"param_TableName": {
										"value": "@pipeline().parameters.param_TableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PostRowCount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "df_Wages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as PostRowCount from definitiv.CustomReportWages",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"param_SchemaName": {
										"value": "@pipeline().parameters.param_SchemaName",
										"type": "Expression"
									},
									"param_TableName": {
										"value": "@pipeline().parameters.param_TableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "OrgPayRuns",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PreRowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select [Org.OrganizationId] as orgId, [payRunId], [Org.LegalName] as orgLegalName, [payslipGenerationStatus] from definitiv.OrganizationPayRuns where [payslipGenerationStatus] = 'Complete'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"param_SchemaName": "definitiv",
									"param_TableName": "OrganizationPayRuns"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "OrgPayRun",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "OrgPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('OrgPayRuns').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ApiToJson",
									"description": "",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.03:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "PipelineName",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												{
													"name": "PipelineRunId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												{
													"name": "PipelineTriggerTime",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": {
												"value": "@{pipeline().globalParameters.global_REST_RequestTimeoutDuration_30min}",
												"type": "Expression"
											},
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_rest_definitiv",
											"type": "DatasetReference",
											"parameters": {
												"sourceRelativeUrl": {
													"value": "@concat('/api/custom-reports/',\npipeline().globalParameters.global_CustomReportId_Wages,\n'?organizationId=', \nitem().orgId, \n'&selectedPayRunId=', \nitem().payRunId)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
											"type": "DatasetReference",
											"parameters": {
												"ds_PipelineTriggerTime": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"ds_PipelineRunId": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"ds_FileSystem": {
													"value": "@pipeline().globalParameters.global_adls2_FileSystem",
													"type": "Expression"
												},
												"ds_Directory": {
													"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
													"type": "Expression"
												},
												"ds_PipelineName": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_SchemaName": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"param_TableName": {
						"type": "string",
						"defaultValue": "CustomReportWages"
					}
				},
				"variables": {
					"varCopyActivityErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_Wages"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-21T07:04:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Organizations",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PreRowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select organizationId, legalName from definitiv.Organizations",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"param_SchemaName": "definitiv",
									"param_TableName": "Organizations"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Organization",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Organizations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Organizations').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ApiToJson",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.03:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Org.OrganizationId",
													"value": {
														"value": "@item().organizationId",
														"type": "Expression"
													}
												},
												{
													"name": "Org.LegalName",
													"value": {
														"value": "@item().legalName",
														"type": "Expression"
													}
												},
												{
													"name": "PipelineName",
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													}
												},
												{
													"name": "PipelineRunId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												{
													"name": "PipelineTriggerTime",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												},
												{
													"name": "PipelineTriggerId",
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": {
												"value": "@{pipeline().globalParameters.global_REST_RequestTimeoutDuration_30min}",
												"type": "Expression"
											},
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_rest_definitiv",
											"type": "DatasetReference",
											"parameters": {
												"sourceRelativeUrl": {
													"value": "@concat('/api/company/', item().organizationId, '/pay-runs')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
											"type": "DatasetReference",
											"parameters": {
												"ds_PipelineTriggerTime": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"ds_PipelineRunId": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"ds_FileSystem": {
													"value": "@pipeline().globalParameters.global_adls2_FileSystem",
													"type": "Expression"
												},
												"ds_Directory": {
													"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
													"type": "Expression"
												},
												"ds_PipelineName": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "df_OrgPayRuns",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Organization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.03:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_OrgPayRuns",
								"type": "DataFlowReference",
								"parameters": {
									"param_FileSystem": {
										"value": "'@{pipeline().globalParameters.global_adls2_FileSystem}'",
										"type": "Expression"
									},
									"param_ErrorRowDirectory": {
										"value": "'@{pipeline().globalParameters.global_adls2_SqlErrorRowDirectory}'",
										"type": "Expression"
									},
									"param_DataflowName": "\"df_OrgPayRuns\""
								},
								"datasetParameters": {
									"sourceJson": {
										"ds_PipelineTriggerTime": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"ds_PipelineRunId": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"ds_FileSystem": {
											"value": "@pipeline().globalParameters.global_adls2_FileSystem",
											"type": "Expression"
										},
										"ds_Directory": {
											"value": "@pipeline().globalParameters.global_adls2_OutputDirectory_Json",
											"type": "Expression"
										},
										"ds_PipelineName": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"sinkSql": {
										"param_SchemaName": {
											"value": "@pipeline().parameters.param_SchemaName",
											"type": "Expression"
										},
										"param_TableName": {
											"value": "@pipeline().parameters.param_TableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AustraliaEastIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "pl_CopyFromApiToDefinitivSchema_Payslips",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PostRowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_Payslips",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_SchemaName": "definitiv",
								"param_TableName": "CustomReportPayslips"
							}
						}
					},
					{
						"name": "PreRowCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as PreRowCount from definitiv.OrganizationPayRuns",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"param_SchemaName": {
										"value": "@pipeline().parameters.param_SchemaName",
										"type": "Expression"
									},
									"param_TableName": {
										"value": "@pipeline().parameters.param_TableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PostRowCount",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "df_OrgPayRuns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as PostRowCount from definitiv.OrganizationPayRuns",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_tnk001",
								"type": "DatasetReference",
								"parameters": {
									"param_SchemaName": {
										"value": "@pipeline().parameters.param_SchemaName",
										"type": "Expression"
									},
									"param_TableName": {
										"value": "@pipeline().parameters.param_TableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "pl_CopyFromApiToDefinitivSchema_Wages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PostRowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_CopyFromApiToDefinitivSchema_Wages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_SchemaName": "definitiv",
								"param_TableName": "CustomReportWages"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_SchemaName": {
						"type": "string",
						"defaultValue": "definitiv"
					},
					"param_TableName": {
						"type": "string",
						"defaultValue": "OrganizationPayRuns"
					}
				},
				"folder": {
					"name": "07_PayRuns"
				},
				"annotations": [],
				"lastPublishTime": "2022-01-21T07:04:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_CopyFromApiToDefinitivSchema_Wages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_Employees_Scheduled_1d')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PayPolicies",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_Employees_Scheduled_1d_properties_PayPolicies_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_Employees_Scheduled_1d_properties_PayPolicies_parameters_param_TableName')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Employees",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_Employees_Scheduled_1d_properties_Employees_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_Employees_Scheduled_1d_properties_Employees_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-07T04:42:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_LeaveApplications_Scheduled_1d')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeaveApplications",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_LeaveApplications_Scheduled_1d_properties_LeaveApplications_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_LeaveApplications_Scheduled_1d_properties_LeaveApplications_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-08T05:45:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_LeaveBalances_Scheduled_1d')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeaveBalances",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_LeaveBalances_Scheduled_1d_properties_LeaveBalances_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_LeaveBalances_Scheduled_1d_properties_LeaveBalances_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-06-08T06:03:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_Organizations_Scheduled_1w')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Organizations",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_Organizations_Scheduled_1w_properties_Organizations_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_Organizations_Scheduled_1w_properties_Organizations_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-06-06T04:33:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							],
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_Rosters_Scheduled_1h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_CopyFromApiToDefinitivSchema_Rosters",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_Rosters_Scheduled_1h_properties_pl_CopyFromApiToDefinitivSchema_Rosters_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_Rosters_Scheduled_1h_properties_pl_CopyFromApiToDefinitivSchema_Rosters_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-04-14T09:00:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_Timesheets_Scheduled_1d')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Timesheets",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_Timesheets_Scheduled_1d_properties_Timesheets_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_Timesheets_Scheduled_1d_properties_Timesheets_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-24T18:00:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_PayRuns_Scheduled_1w')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Parent pipeline for Payslips and Wages.",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_PayRuns_Scheduled_1w_properties_pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_PayRuns_Scheduled_1w_properties_pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns_parameters_param_TableName')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Payslips",
							"type": "PipelineReference"
						},
						"parameters": {
							"param_SchemaName": "[parameters('tr_PayRuns_Scheduled_1w_properties_Payslips_parameters_param_SchemaName')]",
							"param_TableName": "[parameters('tr_PayRuns_Scheduled_1w_properties_Payslips_parameters_param_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2022-04-01T01:00:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							],
							"weekDays": [
								"Thursday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_CopyFromApiToDefinitivSchema_OrganizationPayRuns')]"
			]
		}
	]
}