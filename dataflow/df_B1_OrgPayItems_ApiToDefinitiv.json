{
	"name": "df_B1_OrgPayItems_ApiToDefinitiv",
	"properties": {
		"folder": {
			"name": "09_PayItems"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
						"type": "DatasetReference"
					},
					"name": "SourceBlobDefinitivPayslips"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SourceSqlDefinitivPayslips"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SinkSqlDefinitivPayslips",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls2_stnidoprodeastau100",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "AlterRow1"
				},
				{
					"name": "CastDateType1"
				},
				{
					"name": "FilterPeriodEndDate"
				},
				{
					"name": "Insert"
				},
				{
					"name": "NotExistsDelete"
				},
				{
					"name": "Delete"
				},
				{
					"name": "Update"
				},
				{
					"name": "UnionAlterRowCondition"
				},
				{
					"name": "SelectSqlDefinitivPayslips"
				},
				{
					"name": "SelectBlobDefinitivPayslips"
				},
				{
					"name": "ExistsUpdate"
				},
				{
					"name": "NotExistsInsert"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\t{OrgPayRun.OrganizationId} as string,\n\t\t{OrgPayRun.PayRunId} as string,\n\t\t{OrgPayRun.PeriodEndDate} as date,\n\t\t{OrgPayRun.PeriodStartDate} as date,\n\t\t{OrgPayRun.PipelineRunId} as string,\n\t\t{OrgPayRun.PipelineTriggerTime} as string,\n\t\tbaseRate as double,\n\t\tdepartmentCode as string,\n\t\temployeeId as string,\n\t\temploymentTypeCode as string,\n\t\temploymentTypeCodeDesc as string,\n\t\tfirstName as string,\n\t\t{hoursOrA/DCode} as integer,\n\t\t{hoursOrA/DCodeDesc} as string,\n\t\tidNumber as integer,\n\t\tlevel1Code as string,\n\t\tlevel2Code as string,\n\t\tlineItemId as integer,\n\t\tnumberOfUnits as double,\n\t\tpayDate as string,\n\t\tpayMethodCode as string,\n\t\tpayMethodCodeDesc as string,\n\t\tpayslipId as string,\n\t\tpayslipNumber as string,\n\t\tperiodEndingDate as string,\n\t\tperiodStartDate as string,\n\t\tpositionTitle as string,\n\t\tprojectCode as string,\n\t\trate as double,\n\t\tsurname as string,\n\t\tvalue as double\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'SourceFileName',\n\tdocumentForm: 'documentPerLine') ~> SourceBlobDefinitivPayslips\nsource(output(\n\t\tRecordId as string,\n\t\tRecordVersion as binary,\n\t\tRecordCreatedDate as timestamp,\n\t\tRecordModifiedDate as timestamp,\n\t\tRecordIsDeleted as boolean,\n\t\tRecordIsDefinitiv as boolean,\n\t\tRecordIsPreceda as boolean,\n\t\tPipelineRunId as string,\n\t\tPipelineSourceFileName as string,\n\t\tPipelineTriggerTime as string,\n\t\tEmployeeId as string,\n\t\tOrganizationId as string,\n\t\tPayRunId as string,\n\t\tPayslipId as string,\n\t\tPayRunPeriodEndDate as date,\n\t\tPayRunPeriodStartDate as date,\n\t\tPayslipLineItemId as integer,\n\t\tPayslipNumber as string,\n\t\tBaseRate as double,\n\t\tDepartmentCode as string,\n\t\tEmploymentTypeCode as string,\n\t\tEmploymentTypeCodeDesc as string,\n\t\tFirstName as string,\n\t\tHoursOrADCode as string,\n\t\tHoursOrADCodeDesc as string,\n\t\tIdNumber as integer,\n\t\tLevel1Code as string,\n\t\tLevel2Code as string,\n\t\tNumberOfUnits as double,\n\t\tPayDate as date,\n\t\tPayMethodCode as string,\n\t\tPayMethodCodeDesc as string,\n\t\tPeriodEndingDate as date,\n\t\tPeriodStartDate as date,\n\t\tPositionTitle as string,\n\t\tProjectCode as string,\n\t\tRate as double,\n\t\tSurname as string,\n\t\tValue as double\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlDefinitivPayslips\nUnionAlterRowCondition alterRow(insertIf(AlterRowCondition==\"Insert\"),\n\tupdateIf(AlterRowCondition==\"Update\"),\n\tdeleteIf(AlterRowCondition==\"Delete\")) ~> AlterRow1\nSelectBlobDefinitivPayslips derive(PayDate = toDate(PayDate),\n\t\tHoursOrADCode = toString(HoursOrADCode)) ~> CastDateType1\nCastDateType1 filter(greater({OrgPayRun.PeriodEndDate}, toDate(\"2021-10-15\", 'yyyy-MM-dd'))) ~> FilterPeriodEndDate\nNotExistsInsert derive(AlterRowCondition = \"Insert\",\n\t\tRecordCreatedDate = currentUTC('A.U.S. Eastern Standard Time'),\n\t\tRecordIsDeleted = false()) ~> Insert\nSelectSqlDefinitivPayslips, FilterPeriodEndDate exists({Sql.DepartmentCode} == DepartmentCode\n\t&& {Sql.OrganizationId} == {OrgPayRun.OrganizationId}\n\t&& {Sql.PayRunId} == {OrgPayRun.PayRunId}\n\t&& {Sql.EmployeeId} == EmployeeId\n\t&& {Sql.HoursOrADCode} == HoursOrADCode\n\t&& {Sql.HoursOrADCodeDesc} == HoursOrADCodeDesc\n\t&& {Sql.Level1Code} == Level1Code\n\t&& {Sql.Level2Code} == Level2Code\n\t&& {Sql.PayslipId} == PayslipId\n\t&& {Sql.PayslipLineItemId} == PayslipLineItemId\n\t&& {Sql.PositionTitle} == PositionTitle\n\t&& {Sql.ProjectCode} == ProjectCode\n\t&& {Sql.Rate} == Rate,\n\tnegate:true,\n\tbroadcast: 'right')~> NotExistsDelete\nNotExistsDelete derive(AlterRowCondition = \"Delete\",\n\t\tRecordModifiedDate = currentUTC('A.U.S. Eastern Standard Time'),\n\t\tRecordIsDeleted = true()) ~> Delete\nExistsUpdate derive(AlterRowCondition = \"Update\",\n\t\tRecordModifiedDate = currentUTC('A.U.S. Eastern Standard Time'),\n\t\tRecordIsDeleted = false()) ~> Update\nUpdate, Insert, Delete union(byName: true)~> UnionAlterRowCondition\nSourceSqlDefinitivPayslips select(mapColumn(\n\t\t{Sql.EmployeeId} = EmployeeId,\n\t\t{Sql.OrganizationId} = OrganizationId,\n\t\t{Sql.PayRunId} = PayRunId,\n\t\t{Sql.PayslipId} = PayslipId,\n\t\t{Sql.PayslipLineItemId} = PayslipLineItemId,\n\t\t{Sql.DepartmentCode} = DepartmentCode,\n\t\t{Sql.HoursOrADCode} = HoursOrADCode,\n\t\t{Sql.HoursOrADCodeDesc} = HoursOrADCodeDesc,\n\t\t{Sql.Level1Code} = Level1Code,\n\t\t{Sql.Level2Code} = Level2Code,\n\t\t{Sql.PositionTitle} = PositionTitle,\n\t\t{Sql.ProjectCode} = ProjectCode,\n\t\t{Sql.Rate} = Rate\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> SelectSqlDefinitivPayslips\nSourceBlobDefinitivPayslips select(mapColumn(\n\t\t{OrgPayRun.OrganizationId},\n\t\t{OrgPayRun.PayRunId},\n\t\t{OrgPayRun.PeriodEndDate},\n\t\t{OrgPayRun.PeriodStartDate},\n\t\t{OrgPayRun.PipelineRunId},\n\t\t{OrgPayRun.PipelineTriggerTime},\n\t\tBaseRate = baseRate,\n\t\tDepartmentCode = departmentCode,\n\t\tEmployeeId = employeeId,\n\t\tEmploymentTypeCode = employmentTypeCode,\n\t\tEmploymentTypeCodeDesc = employmentTypeCodeDesc,\n\t\tFirstName = firstName,\n\t\tHoursOrADCode = {hoursOrA/DCode},\n\t\tHoursOrADCodeDesc = {hoursOrA/DCodeDesc},\n\t\tIdNumber = idNumber,\n\t\tLevel1Code = level1Code,\n\t\tLevel2Code = level2Code,\n\t\tPayslipLineItemId = lineItemId,\n\t\tNumberOfUnits = numberOfUnits,\n\t\tPayDate = payDate,\n\t\tPayMethodCode = payMethodCode,\n\t\tPayMethodCodeDesc = payMethodCodeDesc,\n\t\tPayslipId = payslipId,\n\t\tPayslipNumber = payslipNumber,\n\t\tPeriodEndingDate = periodEndingDate,\n\t\tPeriodStartDate = periodStartDate,\n\t\tPositionTitle = positionTitle,\n\t\tProjectCode = projectCode,\n\t\tRate = rate,\n\t\tSurname = surname,\n\t\tValue = value,\n\t\tSourceFileName\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> SelectBlobDefinitivPayslips\nFilterPeriodEndDate, SelectSqlDefinitivPayslips exists(DepartmentCode == {Sql.DepartmentCode}\n\t&& EmployeeId == {Sql.EmployeeId}\n\t&& HoursOrADCode == {Sql.HoursOrADCode}\n\t&& HoursOrADCodeDesc == {Sql.HoursOrADCodeDesc}\n\t&& Level1Code == {Sql.Level1Code}\n\t&& Level2Code == {Sql.Level2Code}\n\t&& {OrgPayRun.OrganizationId} == {Sql.OrganizationId}\n\t&& {OrgPayRun.PayRunId} == {Sql.PayRunId}\n\t&& PayslipId == {Sql.PayslipId}\n\t&& PayslipLineItemId == {Sql.PayslipLineItemId}\n\t&& PositionTitle == {Sql.PositionTitle}\n\t&& ProjectCode == {Sql.ProjectCode}\n\t&& Rate == {Sql.Rate},\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsUpdate\nFilterPeriodEndDate, SelectSqlDefinitivPayslips exists(DepartmentCode == {Sql.DepartmentCode}\n\t&& EmployeeId == {Sql.EmployeeId}\n\t&& HoursOrADCode == {Sql.HoursOrADCode}\n\t&& HoursOrADCodeDesc == {Sql.HoursOrADCodeDesc}\n\t&& Level1Code == {Sql.Level1Code}\n\t&& Level2Code == {Sql.Level2Code}\n\t&& {OrgPayRun.OrganizationId} == {Sql.OrganizationId}\n\t&& {OrgPayRun.PayRunId} == {Sql.PayRunId}\n\t&& PayslipId == {Sql.PayslipId}\n\t&& PayslipLineItemId == {Sql.PayslipLineItemId}\n\t&& PositionTitle == {Sql.PositionTitle}\n\t&& ProjectCode == {Sql.ProjectCode}\n\t&& Rate == {Sql.Rate},\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExistsInsert\nUnionAlterRowCondition aggregate(groupBy(AlterRowCondition),\n\tCountAlterRowCondition = count(AlterRowCondition)) ~> Aggregate1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tdeletable:true,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['DepartmentCode','EmployeeId','HoursOrADCode','HoursOrADCodeDesc','Level1Code','Level2Code','OrganizationId','PayRunId','PayslipId','PayslipLineItemId','PositionTitle','ProjectCode','Rate'],\n\tformat: 'table',\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\toutputRejectedData: true,\n\trejectedData_fileSystem: 'container-adf-nido-prod-eastau-100-1',\n\trejectedData_folderPath: (\"ds_adls2_stnidoprodeastau100_log\"),\n\ttransactionCommit: 'batch',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tOrganizationId = {OrgPayRun.OrganizationId},\n\t\tPayRunId = {OrgPayRun.PayRunId},\n\t\tPeriodEndDate = {OrgPayRun.PeriodEndDate},\n\t\tPeriodStartDate = {OrgPayRun.PeriodStartDate},\n\t\tPipelineRunId = {OrgPayRun.PipelineRunId},\n\t\tPipelineTriggerTime = {OrgPayRun.PipelineTriggerTime},\n\t\tBaseRate,\n\t\tDepartmentCode,\n\t\tEmployeeId,\n\t\tEmploymentTypeCode,\n\t\tEmploymentTypeCodeDesc,\n\t\tFirstName,\n\t\tHoursOrADCode,\n\t\tHoursOrADCodeDesc,\n\t\tIdNumber,\n\t\tLevel1Code,\n\t\tLevel2Code,\n\t\tPayslipLineItemId,\n\t\tNumberOfUnits,\n\t\tPayDate,\n\t\tPayMethodCode,\n\t\tPayMethodCodeDesc,\n\t\tPayslipId,\n\t\tPayslipNumber,\n\t\tPeriodEndingDate,\n\t\tPeriodStartDate,\n\t\tPositionTitle,\n\t\tProjectCode,\n\t\tRate,\n\t\tSurname,\n\t\tValue,\n\t\tSourceFileName,\n\t\tAlterRowCondition,\n\t\tRecordModifiedDate,\n\t\tRecordIsDeleted,\n\t\tRecordCreatedDate,\n\t\tEmployeeId = {Sql.EmployeeId},\n\t\tOrganizationId = {Sql.OrganizationId},\n\t\tPayRunId = {Sql.PayRunId},\n\t\tPayslipId = {Sql.PayslipId},\n\t\tPayslipLineItemId = {Sql.PayslipLineItemId},\n\t\tDepartmentCode = {Sql.DepartmentCode},\n\t\tHoursOrADCode = {Sql.HoursOrADCode},\n\t\tHoursOrADCodeDesc = {Sql.HoursOrADCodeDesc},\n\t\tLevel1Code = {Sql.Level1Code},\n\t\tLevel2Code = {Sql.Level2Code},\n\t\tPositionTitle = {Sql.PositionTitle},\n\t\tProjectCode = {Sql.ProjectCode},\n\t\tRate = {Sql.Rate}\n\t)) ~> SinkSqlDefinitivPayslips"
		}
	}
}