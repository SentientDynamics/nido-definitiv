{
	"name": "df_UpdateCusomReportWages",
	"properties": {
		"folder": {
			"name": "02_Wages"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls2_stnidoprodeastau100_json_input",
						"type": "DatasetReference"
					},
					"name": "sourceApi"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "sourceSql"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls2_stnidoprodeastau100",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "AlterRow1"
				},
				{
					"name": "FilterWeekEndingDate"
				},
				{
					"name": "CastDateType1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Insert"
				},
				{
					"name": "Update"
				},
				{
					"name": "Delete"
				},
				{
					"name": "UnionAlterRowCondition"
				},
				{
					"name": "NotExistsDelete"
				},
				{
					"name": "CastDateType2"
				},
				{
					"name": "NotExistsInsert"
				},
				{
					"name": "ExistsUpdate"
				}
			],
			"script": "parameters{\n\tpipelineRunId as string (\"1b8c16e7-2b69-4758-b37c-06a6aa153d3c\"),\n\tpipelineTriggerTime as string (\"2022-01-14T00:59:42.8892361Z\")\n}\nsource(output(\n\t\tamount as double,\n\t\tdepartment as string,\n\t\temployeeId as string,\n\t\tfirstName as string,\n\t\tfullName as string,\n\t\t{hoursOrA/DCode} as integer,\n\t\t{hoursOrA/DCodeDesc} as string,\n\t\tidNumber as integer,\n\t\tlevel1Code as string,\n\t\tlevel2Code as string,\n\t\tlineItemId as integer,\n\t\tpayItemId as string,\n\t\tpayRunId as string,\n\t\tpayRunOrganizationId as string,\n\t\tpayRunPayRunId as string,\n\t\tpayRunPeriodEndDate as date,\n\t\tpayRunPeriodStartDate as date,\n\t\tpayrunGroup as string,\n\t\tpayslipId as string,\n\t\tpipelineRunId as string,\n\t\tpipelineTriggerTime as string,\n\t\tpositionID as string,\n\t\tpositionTitle as string,\n\t\troom as string,\n\t\tsurname as string,\n\t\tweekEndingDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'SourceFileName',\n\tdocumentForm: 'documentPerLine') ~> sourceApi\nsource(output(\n\t\tRecordId as string,\n\t\tRecordVersion as binary,\n\t\tRecordCreatedDate as timestamp,\n\t\tRecordModifiedDate as timestamp,\n\t\tRecordIsDeleted as boolean,\n\t\tPipelineRunId as string,\n\t\tPipelineSourceFileName as string,\n\t\tPipelineTriggerTime as string,\n\t\tEmployeeId as string,\n\t\tOrganizationId as string,\n\t\tPayItemId as string,\n\t\tPayRunId as string,\n\t\tPayslipId as string,\n\t\tPayRunPeriodEndDate as date,\n\t\tPayRunPeriodStartDate as date,\n\t\tWageLineItemId as integer,\n\t\tAmount as decimal(19,4),\n\t\tDepartment as string,\n\t\tFirstName as string,\n\t\tFullName as string,\n\t\tHoursOrADCode as integer,\n\t\tHoursOrADCodeDesc as string,\n\t\tIdNumber as integer,\n\t\tLevel1Code as string,\n\t\tLevel2Code as string,\n\t\tPayRunGroup as string,\n\t\tPositionID as string,\n\t\tPositionTitle as string,\n\t\tRoom as string,\n\t\tSurname as string,\n\t\tWeekEndingDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSql\nUnionAlterRowCondition alterRow(insertIf(AlterRowCondition==\"Insert\"),\n\tupdateIf(AlterRowCondition==\"Update\"),\n\tdeleteIf(AlterRowCondition==\"Delete\")) ~> AlterRow1\nCastDateType1 filter(greater(WeekEndingDate, toDate(\"2021-10-15\"))) ~> FilterWeekEndingDate\nSelect1 derive(WeekEndingDate = toDate(WeekEndingDate),\n\t\tHoursOrADCode = toInteger(HoursOrADCode),\n\t\tPipelineTriggerTime = fromUTC(toTimestamp(PipelineTriggerTime, 'yyyy-MM-dd\\'T\\'HH:mm:ss'), 'A.U.S. Eastern Standard Time')) ~> CastDateType1\nsourceApi select(mapColumn(\n\t\tAmount = amount,\n\t\tDepartment = department,\n\t\tEmployeeId = employeeId,\n\t\tFirstName = firstName,\n\t\tFullName = fullName,\n\t\tHoursOrADCode = {hoursOrA/DCode},\n\t\tHoursOrADCodeDesc = {hoursOrA/DCodeDesc},\n\t\tIdNumber = idNumber,\n\t\tLevel1Code = level1Code,\n\t\tLevel2Code = level2Code,\n\t\tLineItemId = lineItemId,\n\t\tPayItemId = payItemId,\n\t\tPayRunId = payRunId,\n\t\tOrganizationId = payRunOrganizationId,\n\t\tPayRunId = payRunPayRunId,\n\t\tPayRunPeriodEndDate = payRunPeriodEndDate,\n\t\tPayRunPeriodStartDate = payRunPeriodStartDate,\n\t\tPayrunGroup = payrunGroup,\n\t\tPayslipId = payslipId,\n\t\tPipelineRunId = pipelineRunId,\n\t\tPipelineTriggerTime = pipelineTriggerTime,\n\t\tPositionID = positionID,\n\t\tPositionTitle = positionTitle,\n\t\tRoom = room,\n\t\tSurname = surname,\n\t\tWeekEndingDate = weekEndingDate,\n\t\tSourceFileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsourceSql select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nNotExistsInsert derive(AlterRowCondition = \"Insert\",\n\t\tRecordCreatedDate = PipelineTriggerTime) ~> Insert\nExistsUpdate derive(AlterRowCondition = \"Update\",\n\t\tRecordModifiedDate = PipelineTriggerTime) ~> Update\nNotExistsDelete derive(AlterRowCondition = \"Delete\",\n\t\tRecordModifiedDate = PipelineTriggerTime,\n\t\tRecordIsDeleted = true()) ~> Delete\nUpdate, Insert, Delete union(byName: true)~> UnionAlterRowCondition\nCastDateType2, FilterWeekEndingDate exists(Select2@OrganizationId == Select1@OrganizationId,\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExistsDelete\nSelect2 derive(PipelineTriggerTime = fromUTC(toTimestamp(PipelineTriggerTime, 'yyyy-MM-dd\\'T\\'HH:mm:ss'), 'A.U.S. Eastern Standard Time')) ~> CastDateType2\nFilterWeekEndingDate, CastDateType2 exists(Select1@OrganizationId == Select2@OrganizationId\n\t&& Select1@EmployeeId == Select2@EmployeeId\n\t&& Select1@PayRunId == Select2@PayRunId\n\t&& Select1@PayItemId == Select2@PayItemId\n\t&& LineItemId == WageLineItemId\n\t&& Select1@Department == Select2@Department\n\t&& Select1@PositionTitle == Select2@PositionTitle\n\t&& CastDateType1@HoursOrADCode == Select2@HoursOrADCode\n\t&& Select1@HoursOrADCodeDesc == Select2@HoursOrADCodeDesc\n\t&& Select1@Level1Code == Select2@Level1Code\n\t&& Select1@Level2Code == Select2@Level2Code\n\t&& CastDateType1@WeekEndingDate == Select2@WeekEndingDate,\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExistsInsert\nFilterWeekEndingDate, CastDateType2 exists(Select1@OrganizationId == Select2@OrganizationId,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsUpdate\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['OrganizationId','EmployeeId','PayRunId','PayslipId','PayItemId','WageLineItemId','Department','PositionTitle','Level1Code','Level2Code','HoursOrADCode','HoursOrADCodeDesc','WeekEndingDate'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\toutputRejectedData: true,\n\trejectedData_fileSystem: 'container-adf-nido-prod-eastau-100-1',\n\trejectedData_folderPath: (concat(\"ds_adsl2_stnidoprodeastau100_json/definitiv.CustomReportRostersWagesOutput/\", toString($pipelineTriggerTime, 'yyyy-MM-ddTHH-mm'), \"_\", $pipelineRunId)),\n\ttransactionCommit: 'batch',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tAmount,\n\t\tDepartment,\n\t\tEmployeeId,\n\t\tFirstName,\n\t\tFullName,\n\t\tHoursOrADCode,\n\t\tHoursOrADCodeDesc,\n\t\tIdNumber,\n\t\tLevel1Code,\n\t\tLevel2Code,\n\t\tLineItemId,\n\t\tPayItemId,\n\t\tPayRunId,\n\t\tOrganizationId,\n\t\tPayRunPeriodEndDate,\n\t\tPayRunPeriodStartDate,\n\t\tPayrunGroup = UnionAlterRowCondition@PayrunGroup,\n\t\tPayslipId,\n\t\tPipelineRunId,\n\t\tPipelineTriggerTime,\n\t\tPositionID,\n\t\tPositionTitle,\n\t\tRoom,\n\t\tSurname,\n\t\tWeekEndingDate,\n\t\tSourceFileName,\n\t\tAlterRowCondition,\n\t\tRecordModifiedDate,\n\t\tRecordCreatedDate,\n\t\tRecordId,\n\t\tRecordVersion,\n\t\tRecordIsDeleted,\n\t\tPipelineSourceFileName,\n\t\tWageLineItemId,\n\t\tPayRunGroup = UnionAlterRowCondition@PayRunGroup\n\t)) ~> sink1"
		}
	}
}