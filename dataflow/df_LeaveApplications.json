{
	"name": "df_LeaveApplications",
	"properties": {
		"folder": {
			"name": "06_Leave"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
						"type": "DatasetReference"
					},
					"name": "sourceJson"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "sinkSql",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls2_stnidoprodeastau100",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "castDateColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     param_FileSystem as string (\"container-adf-nido-prod-eastau-100-1\"),",
				"     param_ErrorRowDirectory as string (\"ErrorRows\"),",
				"     param_DataflowName as string (\"df_LeaveApplications\")",
				"}",
				"source(output(",
				"          {Org.OrganizationId} as string,",
				"          PipelineName as string,",
				"          PipelineRunId as string,",
				"          PipelineTriggerTime as string,",
				"          approvers as string,",
				"          dateSubmitted as date,",
				"          employeeId as string,",
				"          employeeNumber as integer,",
				"          firstName as string,",
				"          gender as string,",
				"          leaveApplicationId as string,",
				"          leaveDateEnd as date,",
				"          leaveDateStart as date,",
				"          leaveNotes as string,",
				"          leavePaymentStatus as string,",
				"          leaveReasonName as string,",
				"          leaveTypeId as string,",
				"          leaveTypeName as string,",
				"          leaveUnitOfMeasure as string,",
				"          leaveUnits as double,",
				"          numberOfDays as short,",
				"          organizationId as string,",
				"          printName as string,",
				"          status as string,",
				"          surname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'SourceFileName',",
				"     documentForm: 'documentPerLine') ~> sourceJson",
				"sourceJson derive(each(match(not(typeMatch(type,'datetime'))&&(like(name,'%date%')||like(name,'%Date%')||like(name,'%Time%')||like(name,'%time%'))), $$ = toTimestamp(toString($$), 'yyyy-MM-dd\\'T\\'HH:mm:ss', 'A.U.S. Eastern Standard Time'))) ~> castDateColumns",
				"castDateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'allErrors',",
				"     outputRejectedData: true,",
				"     rejectedData_fileSystem: ($param_FileSystem),",
				"     rejectedData_folderPath: ($param_ErrorRowDirectory),",
				"     transactionCommit: 'batch',",
				"     reportSuccessOnError: true) ~> sinkSql"
			]
		}
	}
}