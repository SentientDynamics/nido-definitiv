{
	"name": "df_Payslips",
	"properties": {
		"folder": {
			"name": "01_Payslips"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls2_stnidoprodeastau100_json_output",
						"type": "DatasetReference"
					},
					"name": "SourceApi"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "sinkSql",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls2_stnidoprodeastau100",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "CastDateType1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Filter1"
				}
			],
			"script": "parameters{\n\tPipelineRunId as string,\n\tPipelineTriggerTime as string,\n\tPipelineName as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'SourceFileName',\n\tdocumentForm: 'documentPerLine') ~> SourceApi\nSelect2 derive(periodEndingDate = toDate(periodEndingDate),\n\t\tperiodStartDate = toDate(periodStartDate),\n\t\tpipelineTriggerTime = fromUTC(toTimestamp(pipelineTriggerTime, 'yyyy-MM-dd\\'T\\'HH:mm:ss'), 'A.U.S. Eastern Standard Time'),\n\t\tpayDate = toDate(payDate)) ~> CastDateType1\nSourceApi select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nCastDateType1 filter(greater(periodEndingDate, toDate(\"2021-10-15\", 'yyyy-MM-dd'))) ~> Filter1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\toutputRejectedData: true,\n\trejectedData_fileSystem: 'container-adf-nido-prod-eastau-100-1',\n\trejectedData_folderPath: (concat(\"ds_adsl2_stnidoprodeastau100_json/\", $PipelineName, \"/\",\r\n    toString(toTimestamp(left($PipelineTriggerTime, 26), 'yyyy-MM-dd\\'T\\'HH:mm:ss')),\r\n    \"_PipelineRunId_\", $PipelineRunId, \"_ErrorOutput\")),\n\ttransactionCommit: 'batch',\n\treportSuccessOnError: false) ~> sinkSql"
		}
	}
}