{
	"name": "df_C1_Payslips_DraftReportViews",
	"properties": {
		"folder": {
			"name": "01_Payslips"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SourceSqlPrecedaPayslip2"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SourceSqlServiceList"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SourceSqlPrecedaMap"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SourceSqlPreceedaPayCodes"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SourceSqlDefinitivPayCodes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "SinkSqlDraftPayslipReportView",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls2_stnidoprodeastau100",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "RecordIsDefinitiv"
				},
				{
					"name": "RecordIsPreceda"
				},
				{
					"name": "InnerPrecedaMap1"
				},
				{
					"name": "RightOuterPrecedaPayslip21"
				},
				{
					"name": "LeftOuterPrecedaPayCodes"
				},
				{
					"name": "RightOuterPrecedaPayslip22"
				},
				{
					"name": "LeftOuterDefinitivPayCodes"
				},
				{
					"name": "PayCodeIsReport"
				},
				{
					"name": "UnionPrecedaDefinitiv"
				},
				{
					"name": "SelectServiceList"
				},
				{
					"name": "SelectDefinitivPayCode"
				},
				{
					"name": "SelectPrecedaPayCode"
				},
				{
					"name": "SelectPrecedaMap"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "parameters{\n\tPipelineRunId as string,\n\tPipelineTriggerTime as string,\n\tPipelineName as string\n}\nsource(output(\n\t\tRecordId as string,\n\t\tRecordVersion as binary,\n\t\tRecordWatermark as binary,\n\t\tRecordCreatedDate as timestamp,\n\t\tRecordModifiedDate as timestamp,\n\t\tRecordIsDeleted as boolean,\n\t\tRecordIsDefinitiv as boolean,\n\t\tRecordIsPreceda as boolean,\n\t\tPipelineRunId as string,\n\t\tPipelineSourceFileName as string,\n\t\tPipelineTriggerTime as string,\n\t\tPayslipNumber as string,\n\t\tBaseRate as double,\n\t\tDepartmentCode as string,\n\t\tEmploymentTypeCode as string,\n\t\tEmploymentTypeCodeDesc as string,\n\t\tFirstName as string,\n\t\tHoursOrADCode as string,\n\t\tHoursOrADCodeDesc as string,\n\t\tIdNumber as integer,\n\t\tLevel1Code as string,\n\t\tLevel2Code as string,\n\t\tNumberOfUnits as double,\n\t\tPayDate as date,\n\t\tPayMethodCode as string,\n\t\tPayMethodCodeDesc as string,\n\t\tPeriodEndingDate as date,\n\t\tPeriodStartDate as date,\n\t\tPositionTitle as string,\n\t\tProjectCode as string,\n\t\tRate as double,\n\t\tSurname as string,\n\t\tValue as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlPrecedaPayslip2\nsource(output(\n\t\tCode as string,\n\t\tService_Name as string,\n\t\tService_ID as string,\n\t\tBase as string,\n\t\tOwner as string,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostal_Code as double,\n\t\tCountry as string,\n\t\tPlaces as double,\n\t\tDate_of_NIDO_Transition as date,\n\t\tDateTNKManagedFrom as date,\n\t\tPreviousOwner as string,\n\t\tBrand as string,\n\t\tRegistered_Name as string,\n\t\tLatitude as decimal(18,6),\n\t\tLongitude as decimal(18,6),\n\t\tDateServiceClosed as date,\n\t\tService_or_Office as string,\n\t\tApprovedProvider as string,\n\t\tApprovedProviderABN as string,\n\t\tApprovedProviderNumber as string,\n\t\tProposedOpenDate as date,\n\t\t{Project Manager / Company} as string,\n\t\t{Landscaping Company} as string,\n\t\tArchitects as string,\n\t\t{Construction completion date} as date,\n\t\t{Yard completion date} as date,\n\t\t{Fitout start date} as date,\n\t\t{Service approval pre-inspection date} as date,\n\t\t{Service approval status} as string,\n\t\t{Start up person} as string,\n\t\t{Notes on progress} as string,\n\t\t{Stage in service lifecycle} as string,\n\t\t{Type of proposal} as string,\n\t\t{ESM First Name} as string,\n\t\t{ESM Last Name} as string,\n\t\t{ESM Mobile Number} as string,\n\t\t{ESM Email} as string,\n\t\tServiceAdminFirstName as string,\n\t\tServiceAdminLastName as string,\n\t\tServiceAdminEmail as string,\n\t\t{Business Phone} as string,\n\t\tOpen as string,\n\t\tClose as string,\n\t\t{Email Address} as string,\n\t\tWebsite as string,\n\t\tSupplierCompany as string,\n\t\t{Staff Employer} as string,\n\t\tModified as timestamp,\n\t\tID as integer,\n\t\tService_Approval_Date as date,\n\t\tDateTNKAcquired as date,\n\t\tCreditCardAcquital as boolean,\n\t\tRent as decimal(19,4),\n\t\t{Board Approval Date} as date,\n\t\t{DA date} as date,\n\t\t{AFL signed date} as date,\n\t\tOwnerEmail as string,\n\t\tSageServiceCode as string,\n\t\tPQLEmail as string,\n\t\tBaseFuture as string,\n\t\tPreviousPlaces as integer,\n\t\tDatePlacesChanged as date,\n\t\tPQLEmail2 as string,\n\t\tLandlordsName as string,\n\t\tLandlordsEmailAddress as string,\n\t\tLandlordsPhoneNumber as string,\n\t\tLandlordsEntity as string,\n\t\tLandlordsAddress as string,\n\t\tProposedFeesOvers as decimal(19,4),\n\t\tProposedFeesUnders as decimal(19,4),\n\t\tDA_Status as string,\n\t\tBoard_Approval_Status as string,\n\t\tOccupancy_Certificate as boolean,\n\t\t{LL Mortgagee consent to Lease} as boolean,\n\t\t{Lease registered} as boolean,\n\t\t{External counsel signed off} as boolean,\n\t\t{Bank Guarantee to be issued date} as date,\n\t\t{Corporate Guarantor details} as string,\n\t\t{Corporate Guarantor Capped Amount} as decimal(19,4),\n\t\t{Capital Contribution payable to Tenant under the AFL or Lease} as string,\n\t\t{Capital Contribution Amount} as decimal(19,4),\n\t\t{Estimated capital expenditure expected to be paid by Tenant for set-up} as decimal(19,4),\n\t\t{Tenant Insurance in place} as boolean,\n\t\t{Estimated Gross Turnover - Insurance} as decimal(19,4),\n\t\t{Estimated Annual Wages - Insurance} as decimal(19,4),\n\t\t{Contents Value - Insurance} as decimal(19,4),\n\t\tBrand_at_TNK_PurchaseDate as string,\n\t\tBrand_Change_Date as date,\n\t\tBrand_Before_Change as string,\n\t\tAverageDailyFee as decimal(19,4),\n\t\tBase4Reports as string,\n\t\tDateTNDAcquired as date,\n\t\tWaitListSoftware as string,\n\t\tNominatedSupervisorID as integer,\n\t\tService_CRN as string,\n\t\t{Provider CRN (Proda)} as string,\n\t\t{Cluster Name} as string,\n\t\t{KMs to Cluster Lead Service} as double,\n\t\tCurriculumLeaderEmail as string,\n\t\t{Board Approval Method} as string,\n\t\t{Acquisition Category} as string,\n\t\tBizNameRenewal as date,\n\t\t{AFL Status} as string,\n\t\t{Lease Staus} as string,\n\t\t{Nomos updated} as boolean,\n\t\t{ROE Status} as string,\n\t\t{Bank Guarantee Amount} as decimal(19,4),\n\t\tWkBeginSpaceToMyWL as date,\n\t\tLGAname_deprecated as string,\n\t\t{Purpose Built or Converted} as string,\n\t\tLGAcode_deprecated as integer,\n\t\tSEIFAdecileLGA as integer,\n\t\tSA2code as integer,\n\t\tSA2name as string,\n\t\t{Year building built} as integer,\n\t\t{No 0-5 Year olds} as float,\n\t\tAveHouseholdIncome as decimal(19,4),\n\t\tAveMortgageRepayments as decimal(19,4),\n\t\tUnemploymentRate as float,\n\t\tAveWeeklyRental as decimal(19,4),\n\t\tAveWeeklyHouseholdIncome as decimal(19,4),\n\t\tBirthRate2018 as float,\n\t\t{Population Growth Est 2020-2025} as float,\n\t\t{Female Workforce Particpation Rate} as float,\n\t\t{Population Density per Hectare} as float,\n\t\t{No Dwellings} as integer,\n\t\t{No Houses} as integer,\n\t\t{No Apartments} as integer,\n\t\t{No. Housing Approvals} as integer,\n\t\tAveAgePopulation as float,\n\t\tSEIFAdecileSA2 as integer,\n\t\t{Curriculum Leader FirstName} as string,\n\t\t{Curriculum Leader LastName} as string,\n\t\t{Curriculum Leader} as string,\n\t\t{PQL FirstName} as string,\n\t\t{PQL LastName} as string,\n\t\tAreaManager as string,\n\t\tLastModified as timestamp,\n\t\tLastModifiedBy as string,\n\t\tAdded as timestamp,\n\t\tAddedBy as string,\n\t\tServiceApprovalGrantedDate as date,\n\t\tLandlordAgent as string,\n\t\tmanaged_bb as string,\n\t\tLGAname as string,\n\t\tEsmEmailThink as string,\n\t\tSAEmailThink as string,\n\t\tPQLEmailThink as string,\n\t\tPQLEmail2Think as string,\n\t\tCLEmailThink as string,\n\t\tService_ID_History as string,\n\t\tEmailAddressThink as string,\n\t\tBBGroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlServiceList\nsource(output(\n\t\tPreceedaCode as string,\n\t\tServiceCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlPrecedaMap\nsource(output(\n\t\tCode as string,\n\t\tDescription as string,\n\t\t{Description Group} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlPreceedaPayCodes\nsource(output(\n\t\tCode as string,\n\t\tDescription as string,\n\t\tDescriptionGroup as string,\n\t\treport as boolean,\n\t\tIsReportViewPayslipsFilter as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceSqlDefinitivPayCodes\nSourceSqlPrecedaPayslip2 filter(RecordIsDefinitiv==true() \r\n    && PeriodEndingDate > toDate(\"2021-10-15\")) ~> RecordIsDefinitiv\nSourceSqlPrecedaPayslip2 filter(RecordIsPreceda==true() \r\n    && PeriodEndingDate <= toDate(\"2021-10-15\")) ~> RecordIsPreceda\nSelectServiceList, SelectPrecedaMap join({ServiceList.Code} == {PrecedaMap.ServiceCode},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> InnerPrecedaMap1\nInnerPrecedaMap1, RecordIsPreceda join({PrecedaMap.PreceedaCode} == DepartmentCode,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> RightOuterPrecedaPayslip21\nRightOuterPrecedaPayslip21, SelectPrecedaPayCode join(toString(HoursOrADCode) == {PrecedaPayCodes.Code},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftOuterPrecedaPayCodes\nInnerPrecedaMap1, RecordIsDefinitiv join({PrecedaMap.PreceedaCode} == ProjectCode,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> RightOuterPrecedaPayslip22\nRightOuterPrecedaPayslip22, SelectDefinitivPayCode join(HoursOrADCodeDesc == {DefinitivPayCodes.Description},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftOuterDefinitivPayCodes\nSourceSqlDefinitivPayCodes filter(IsReportViewPayslipsFilter==true()) ~> PayCodeIsReport\nLeftOuterDefinitivPayCodes, LeftOuterPrecedaPayCodes union(byName: true)~> UnionPrecedaDefinitiv\nSourceSqlServiceList select(mapColumn(\n\t\t{ServiceList.Code} = Code,\n\t\t{ServiceList.Owner} = Owner\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectServiceList\nPayCodeIsReport select(mapColumn(\n\t\t{DefinitivPayCodes.Code} = Code,\n\t\t{DefinitivPayCodes.Description} = Description,\n\t\t{DefinitivPayCodes.DescriptionGroup} = DescriptionGroup\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDefinitivPayCode\nSourceSqlPreceedaPayCodes select(mapColumn(\n\t\t{PrecedaPayCodes.Code} = Code,\n\t\t{PrecedaPayCodes.Description} = Description,\n\t\t{PrecedaPayCodes.Description Group} = {Description Group}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPrecedaPayCode\nSourceSqlPrecedaMap select(mapColumn(\n\t\t{PrecedaMap.PreceedaCode} = PreceedaCode,\n\t\t{PrecedaMap.ServiceCode} = ServiceCode\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPrecedaMap\nUnionPrecedaDefinitiv alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['RecordId','RecordWatermark'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\toutputRejectedData: true,\n\trejectedData_fileSystem: 'container-adf-nido-prod-eastau-100-1',\n\trejectedData_folderPath: (concat(\"ds_adsl2_stnidoprodeastau100_json/\", $PipelineName, \"/\",\r\n    toString(toTimestamp(left($PipelineTriggerTime, 20), 'yyyy-MM-dd\\'T\\'HH:mm:ss'), 'yyyy-MM-dd\\'T\\'HH-mm-ss'),\r\n    \"_PipelineRunId_\", $PipelineRunId, \"_ErrorOutput\")),\n\ttransactionCommit: 'batch',\n\treportSuccessOnError: false,\n\tmapColumn(\n\t\tServiceListCode = {ServiceList.Code},\n\t\tServiceListOwner = {ServiceList.Owner},\n\t\tPrecedaMapPreceedaCode = {PrecedaMap.PreceedaCode},\n\t\tPrecedaMapServiceCode = {PrecedaMap.ServiceCode},\n\t\tRecordId,\n\t\tRecordWatermark,\n\t\tRecordCreatedDate,\n\t\tRecordModifiedDate,\n\t\tRecordIsDeleted,\n\t\tRecordIsDefinitiv,\n\t\tRecordIsPreceda,\n\t\tPipelineRunId,\n\t\tPipelineSourceFileName,\n\t\tPipelineTriggerTime,\n\t\tPayslipNumber,\n\t\tBaseRate,\n\t\tDepartmentCode,\n\t\tEmploymentTypeCode,\n\t\tEmploymentTypeCodeDesc,\n\t\tFirstName,\n\t\tHoursOrADCode,\n\t\tHoursOrADCodeDesc,\n\t\tIdNumber,\n\t\tLevel1Code,\n\t\tLevel2Code,\n\t\tNumberOfUnits,\n\t\tPayDate,\n\t\tPayMethodCode,\n\t\tPayMethodCodeDesc,\n\t\tPeriodEndingDate,\n\t\tPeriodStartDate,\n\t\tPositionTitle,\n\t\tProjectCode,\n\t\tRate,\n\t\tSurname,\n\t\tValue,\n\t\tDefinitivPayCode = {DefinitivPayCodes.Code},\n\t\tDefinitivPayCodeDescription = {DefinitivPayCodes.Description},\n\t\tDefinitivPayCodeDescriptionGroup = {DefinitivPayCodes.DescriptionGroup},\n\t\tPrecedaPayCode = {PrecedaPayCodes.Code},\n\t\tPrecedaPayCodeDescription = {PrecedaPayCodes.Description},\n\t\t{PrecedaPayCodeDescription Group} = {PrecedaPayCodes.Description Group}\n\t)) ~> SinkSqlDraftPayslipReportView"
		}
	}
}