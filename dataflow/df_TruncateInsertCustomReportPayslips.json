{
	"name": "df_TruncateInsertCustomReportPayslips",
	"properties": {
		"folder": {
			"name": "01_Payslips"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adsl2_stnidoprodeastau100_json_2",
						"type": "DatasetReference"
					},
					"name": "SourceApi"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "sinkSql",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls2_stnidoprodeastau100",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "CastDateType1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Filter1"
				}
			],
			"script": "parameters{\n\tPipelineRunId as string,\n\tPipelineTriggerTime as string,\n\tPipelineName as string\n}\nsource(output(\n\t\tbaseRate as double,\n\t\tdepartmentCode as string,\n\t\temployeeId as string,\n\t\temploymentTypeCode as string,\n\t\temploymentTypeCodeDesc as string,\n\t\tfirstName as string,\n\t\t{hoursOrA/DCode} as integer,\n\t\t{hoursOrA/DCodeDesc} as string,\n\t\tidNumber as integer,\n\t\tlevel1Code as string,\n\t\tlevel2Code as string,\n\t\tlineItemId as integer,\n\t\tnumberOfUnits as double,\n\t\tpayDate as string,\n\t\tpayMethodCode as string,\n\t\tpayMethodCodeDesc as string,\n\t\tpayRunOrganizationId as string,\n\t\tpayRunPayRunId as string,\n\t\tpayRunPeriodEndDate as date,\n\t\tpayRunPeriodStartDate as date,\n\t\tpayslipId as string,\n\t\tpayslipNumber as string,\n\t\tperiodEndingDate as string,\n\t\tperiodStartDate as string,\n\t\tpipelineRunId as string,\n\t\tpipelineTriggerTime as string,\n\t\tpositionTitle as string,\n\t\tprojectCode as string,\n\t\trate as double,\n\t\tsurname as string,\n\t\tvalue as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'SourceFileName',\n\tdocumentForm: 'documentPerLine') ~> SourceApi\nSelect2 derive(periodEndingDate = toDate(periodEndingDate),\n\t\tperiodStartDate = toDate(periodStartDate),\n\t\tpipelineTriggerTime = fromUTC(toTimestamp(pipelineTriggerTime, 'yyyy-MM-dd\\'T\\'HH:mm:ss'), 'A.U.S. Eastern Standard Time'),\n\t\tpayDate = toDate(payDate)) ~> CastDateType1\nSourceApi select(mapColumn(\n\t\tbaseRate,\n\t\tdepartmentCode,\n\t\temployeeId,\n\t\temploymentTypeCode,\n\t\temploymentTypeCodeDesc,\n\t\tfirstName,\n\t\t{hoursOrA/DCode},\n\t\t{hoursOrA/DCodeDesc},\n\t\tidNumber,\n\t\tlevel1Code,\n\t\tlevel2Code,\n\t\tlineItemId,\n\t\tnumberOfUnits,\n\t\tpayDate,\n\t\tpayMethodCode,\n\t\tpayMethodCodeDesc,\n\t\tpayRunOrganizationId,\n\t\tpayRunPayRunId,\n\t\tpayRunPeriodEndDate,\n\t\tpayRunPeriodStartDate,\n\t\tpayslipId,\n\t\tpayslipNumber,\n\t\tperiodEndingDate,\n\t\tperiodStartDate,\n\t\tpipelineRunId,\n\t\tpipelineTriggerTime,\n\t\tpositionTitle,\n\t\tprojectCode,\n\t\trate,\n\t\tsurname,\n\t\tvalue,\n\t\tSourceFileName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nCastDateType1 filter(greater(periodEndingDate, toDate(\"2021-10-15\", 'yyyy-MM-dd'))) ~> Filter1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'allErrors',\n\toutputRejectedData: true,\n\trejectedData_fileSystem: 'container-adf-nido-prod-eastau-100-1',\n\trejectedData_folderPath: (concat(\"ds_adsl2_stnidoprodeastau100_json/\", $PipelineName, \"/\",\r\n    toString(toTimestamp(left($PipelineTriggerTime, 26), 'yyyy-MM-dd\\'T\\'HH:mm:ss')),\r\n    \"_PipelineRunId_\", $PipelineRunId, \"_ErrorOutput\")),\n\ttransactionCommit: 'batch',\n\treportSuccessOnError: false) ~> sinkSql"
		}
	}
}