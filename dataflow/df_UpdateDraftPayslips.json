{
	"name": "df_UpdateDraftPayslips",
	"properties": {
		"folder": {
			"name": "01_Payslips"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_tnk001",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "AlterRow1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tbaseRate as double,\n\t\temployeeId as string,\n\t\temploymentTypeCode as string,\n\t\temploymentTypeCodeDesc as string,\n\t\tfirstName as string,\n\t\t{hoursOrA/DCode} as string,\n\t\t{hoursOrA/DCodeDesc} as string,\n\t\tidNumber as integer,\n\t\tlevel1Code as string,\n\t\tlevel2Code as string,\n\t\tnumberOfUnits as double,\n\t\torganizationId as string,\n\t\tpayDate as timestamp,\n\t\tpayMethodCode as string,\n\t\tpayMethodCodeDesc as string,\n\t\tpayRunId as string,\n\t\tpayRunPeriodEndDate as date,\n\t\tpayRunPeriodStartDate as date,\n\t\tpayslipId as string,\n\t\tpayslipNumber as string,\n\t\tperiodEndingDate as timestamp,\n\t\tperiodStartDate as timestamp,\n\t\tpipelineRunId as string,\n\t\tpipelineTriggerTime as string,\n\t\tpositionTitle as string,\n\t\trate as double,\n\t\tsurname as string,\n\t\tvalue as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\trowUrlColumn: 'SourceFileName',\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nSelect1 alterRow(upsertIf(true()),\n\tdeleteIf(true())) ~> AlterRow1\nsource1 select(mapColumn(\n\t\t{Base Rate} = baseRate,\n\t\t{Employment Type Code} = employmentTypeCode,\n\t\t{Employment Type Code Desc} = employmentTypeCodeDesc,\n\t\t{First Name} = firstName,\n\t\thoursOrADCode_definitiv = {hoursOrA/DCode},\n\t\thoursOrADCodeDesc_definitiv = {hoursOrA/DCodeDesc},\n\t\t{ID Number} = idNumber,\n\t\t{Level 1 Code} = level1Code,\n\t\t{Level 2 Code} = level2Code,\n\t\t{Number of Units} = numberOfUnits,\n\t\t{Pay Date} = payDate,\n\t\t{Pay Method Code} = payMethodCode,\n\t\t{Pay Method Code Desc} = payMethodCodeDesc,\n\t\t{Payslip Number} = payslipNumber,\n\t\t{Period Start Date} = periodStartDate,\n\t\t{Period Ending Date} = periodEndingDate,\n\t\t{Position Title} = positionTitle,\n\t\tRate = rate,\n\t\tSurname = surname,\n\t\tValue = value,\n\t\tpayslipId,\n\t\tpayRunId,\n\t\temployeeId,\n\t\torganizationId,\n\t\tpipelineRunId,\n\t\tpipelineTriggerTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['employeeId','payslipId','Employment Type Code','Level 1 Code','Level 2 Code','Period Start Date','Period Ending Date'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{Base Rate},\n\t\t{Employment Type Code},\n\t\t{Employment Type Code Desc},\n\t\t{First Name},\n\t\thoursOrADCode_definitiv,\n\t\thoursOrADCodeDesc_definitiv,\n\t\t{ID Number},\n\t\t{Level 1 Code},\n\t\t{Level 2 Code},\n\t\t{Number of Units},\n\t\t{Pay Date},\n\t\t{Pay Method Code},\n\t\t{Pay Method Code Desc},\n\t\t{Payslip Number},\n\t\t{Period Start Date},\n\t\t{Period Ending Date},\n\t\t{Position Title},\n\t\tRate,\n\t\tSurname,\n\t\tValue,\n\t\tpayslipId,\n\t\tpayRunId,\n\t\temployeeId,\n\t\torganizationId,\n\t\tpipelineRunId,\n\t\tpipelineTriggerTime\n\t)) ~> sink1"
		}
	}
}